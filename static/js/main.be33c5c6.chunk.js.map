{"version":3,"sources":["Component/Newheader.js","Component/Adlogin.js","Component/Admin/NewDashboard.js","Component/CheckInReport.js","Component/Reservation.js","Component/CashCollection.js","Component/RoomChart.js","Component/Routing.js","index.js"],"names":["Newheader","props","_this","Object","classCallCheck","this","_super","call","console","log","state","show","checkinData","vacantData","CheckOut","userdata","setState","localStorage","removeItem","window","location","reload","_this2","count","result","length","output","out","react_default","a","createElement","Fragment","className","react_router_dom","to","src","style","width","height","marginTop","marginBottom","alt","type","onClick","handleShow","getItem","logoutNow","Offcanvas","Body","CloseButton","variant","handleClose","history","push","_this3","fetch","concat","method","then","res","json","data","map","item","roomStatus","filter","Component","withRouter","Adlogin","handleChange","event","defineProperty","target","name","value","password","email","message","login","userdat","userMail","registerfirst","username","userphone","useremailAD","userpassword","msg","headers","accept","content-type","body","JSON","stringify","auth","token","alert","setItem","setTimeout","x-access-token","e","_callee","Reg","regenerator_default","wrap","_context","prev","next","phone","stop","react_responsive_modal_esm","open","center","autoComplete","require","placeholder","onChange","disabled","loginNow","onClose","closePage","registerNow","ChartJS","register","CategoryScale","LinearScale","BarElement","Title","Tooltip","NewDashboard","allOccupied","allVacant","allCorporate","allIndividual","allStaff","allComplimentary","allCheckout","TotalSales","POS","Cash","Transfer","Complimentary","Room","OtherTotalSales","OtherRoom","OtherComplimentary","OtherTransfer","OtherCash","OtherPOS","ReceptionSales","date","RestTotalSales","RestRoom","RestComplimentary","RestTransfer","RestCash","RestPOS","PoolTotalSales","PoolRoom","PoolComplimentary","PoolTransfer","PoolCash","PoolPOS","BarTotalSales","BarRoom","BarComplimentary","BarTransfer","BarCash","BarPOS","ClubTotalSales","ClubRoom","ClubComplimentary","ClubTransfer","ClubCash","ClubPOS","Gtotal","Blogin","labels","showRooms","showOthers","showRest","showPool","showClub","showInnerBar","datasets","backgroundColor","transDate","moment","format","Component_Adlogin","Component_Newheader","Button","handleRoomShow","react_number_format_es","thousandSeparator","displayType","handleOthersShow","handleRestShow","handleNiteShow","Card","parseInt","dist","options","responsive","plugins","title","display","text","handleRoomClose","Subtitle","Text","handleOthersClose","handleRestClose","handleNiteClose","resp","allPOS","reduce","totals","POSAmount","allCash","CashAmount","allTransfer","TransferAmount","allComp","CompDebit","allRoom","roomDebit","dailySales","dailySales2","dailySales3","dailySales5","dailySales4","dailySales6","myTimer","setInterval","CheckInReport","occuppancyData","occuppancySearch","percentOcc","NumOccuppied","NumAllRms","AllRms","percentCalculated","checkinhandleChange","bind","assertThisInitialized","react_datepicker_min_default","selected","maxDate","addDays","Date","dropdownMode","dateFormat","placeholderText","searchDate","OccuppancyData","sort","b","roomNumbers","arrDt","arrivalDate","depDt","departureDate","key","_id","fname","lname","roomtypeName","roomRate","discounType","discountAmount","dailyRate","Spinner","animation","_this4","renderOccupancyData","print","_this5","occuppied","AllRooms","percOcc","parseFloat","toFixed","localizer","dateFnsLocalizer","parse","startOfWeek","getDay","locales","Reservation","events","Math","floor","random","allDay","start","end","room","rsvAmount","displayAllRoomNums","displayOccupiedRoomNums","printBTN","transactionDate","starthandleChange","endhandleChange","newtitle","marginLeft","react_big_calendar_esm","startAccessor","endAccessor","selectable","onSelectEvent","handleEventSelection","CashCollection","renderRoomSales","defaultdate","description","renderRestSales","renderBarSales","renderOtherSales","renderPoolSales","renderClubSales","renderLaundrySales","renderGymSales","renderSmoothieSales","renderSwimmingSales","renderMartSales","renderBbqSales","rendershiSales","renderhhSales","RoomDeposits","RoomTotal","depPOS","depCash","depTransfer","depRoom","BarSales","BarTotal","barPOS","barCash","barTransfer","barRoom","RestSales","RestTotal","restPOS","restCash","restTransfer","restRoom","otherSales","othersTotal","otherPOS","otherCash","otherTransfer","otherRoom","POSCal","CashCal","TransferCal","RoomCal","poolPOS","poolCash","poolRoom","poolTransfer","poolSales","PoolTotal","clubPOS","clubCash","clubRoom","clubTransfer","clubSales","clubTotal","laundryPOS","laundryCash","laundryRoom","laundryTransfer","laundrySales","laundryTotal","gymPOS","gymCash","gymRoom","gymTransfer","gymSales","gymTotal","smoothiePOS","smoothieCash","smoothieRoom","smoothieTransfer","smoothieSales","smoothieTotal","swimmingPOS","swimmingCash","swimmingRoom","swimmingTransfer","swimmingSales","swimmingTotal","minimartPOS","minimartCash","minimartRoom","minimartTransfer","minimartSales","minimartTotal","BarbequePOS","BarbequeCash","BarbequeRoom","BarbequeTransfer","BarbequeSales","BarbequeTotal","shishaPOS","shishaCash","shishaRoom","shishaTransfer","shishaSales","shishaTotal","HallHirePOS","HallHireCash","HallHireRoom","HallHireTransfer","HallHireSales","HallHireTotal","startdate","endDate","shift","Hotelname","Hoteladdress","Hotelphone","thisDate","roomSales","restallPOS","restallCash","restallTransfer","restallRoom","restSales","barallPOS","barallCash","barallTransfer","barallRoom","barSales","othersallPOS","othersallCash","othersallTransfer","othersallRoom","OtherSales","poolallPOS","poolallCash","poolallTransfer","poolallRoom","AlPoolSales","cluballPOS","cluballCash","cluballTransfer","cluballRoom","AlClubSales","laundryllPOS","laundryallCash","laundryallTransfer","laundryallRoom","AlLaundrySales","gymllPOS","gymallCash","gymallTransfer","gymallRoom","AlGymSales","smoothiellPOS","smoothieallCash","smoothieallTransfer","smoothieallRoom","AlSmoothieSales","swimmingllPOS","swimmingallCash","swimmingallTransfer","swimmingallRoom","AlSwimmingSales","martllPOS","martallCash","martallTransfer","martallRoom","AlMartSales","bbqllPOS","bbqallCash","bbqallTransfer","bbqallRoom","AlBbqSales","shillPOS","shiallCash","shiallTransfer","shiallRoom","AlshiSales","hhllPOS","hhallCash","hhallTransfer","hhallRoom","AlhhSales","functionSales","functionTotal","functionRoom","functionTransfer","functionCash","functionPOS","renderDate","cleanupfirst","findSalesReport","prefix","RoomChart","renderRoomchart","roomchart","guestrecord","response","axios","get","sent","Routing","react_router","exact","path","component","ReactDOM","render","Component_Routing","document","getElementById"],"mappings":"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","file":"static/js/main.be33c5c6.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Header.css';\r\nimport Offcanvas from 'react-bootstrap/Offcanvas';\r\nimport CloseButton from 'react-bootstrap/CloseButton';\r\nimport {withRouter} from 'react-router-dom';\r\n// import Adlogin from './Adlogin';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst checkinDataUrl = \"/getrmstatus\";\r\n\r\n\r\n\r\nclass Newheader extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        console.log(\">>> inside nanetConstructor\", props)\r\n        this.state={\r\n            show:false,\r\n            checkinData:'',\r\n            vacantData:'',\r\n            CheckOut:'',\r\n            userdata:''\r\n            \r\n        }\r\n    }\r\n\r\n    handleShow(){\r\n        this.setState({show:true})\r\n    }\r\n\r\n    handleClose(){\r\n        this.setState({show:false})\r\n    }\r\n\r\n    // handleLogout = () => {\r\n    //     this.setState({userdata:''})\r\n    //     localStorage.removeItem('userdata')\r\n    //     localStorage.removeItem('rtk')\r\n    //     this.setState({Blogin:true});\r\n    // }\r\n\r\n    logoutNow(){\r\n        localStorage.removeItem('rtk');\r\n        localStorage.removeItem('userdata');\r\n        window.location.reload();\r\n    }\r\n    \r\n    render(){\r\n        console.log(\">>>Inside RMrender\",this.state)\r\n        \r\n        var count=this.state.checkinData;\r\n        if (count!=='green'){\r\n            var result = count.length;\r\n        }\r\n        var vacant=this.state.vacantData;\r\n        var output = vacant.length;\r\n\r\n        var chkout=this.state.CheckOut;\r\n        var out = chkout.length;\r\n\r\n        return (\r\n            <>\r\n                <div className=\"headerbackgrd\">\r\n                    <span>\r\n                        <Link to=\"/\">\r\n                            <center><img src= \"https://i.ibb.co/pP1xN03/Orange-Groove2.png\" className=\"logo\" style={{width:\"150px\", height:\"100px\", marginTop:\"20px\",marginBottom:\"20px\"}} alt=\"logo\"/></center>\r\n                        </Link>\r\n                    </span>\r\n                    \r\n                    <span>\r\n                        \r\n                        <i type=\"button\" className=\"fa fa-bars size2\" onClick={()=>this.handleShow()}></i>\r\n                    \r\n                    </span>\r\n\r\n                    <span>\r\n                        <div>\r\n                            <span className=\"Ikem\">Hi {localStorage.getItem('userdata')}</span>\r\n                        </div>\r\n                    </span>\r\n\r\n                    <span>\r\n                        <div>\r\n                            <p type=\"button\" className=\"Adriel\" onClick={()=>this.logoutNow()}>logout</p>\r\n                        </div>\r\n                    </span>\r\n                   \r\n                </div>\r\n                <div className=\"headerbackgrd2\">\r\n                    <span>\r\n                        <center>\r\n                            <span className='fontopt1'>CheckIn</span> <button className=\"btn btn-danger reshape\">{result}</button>\r\n                               \r\n                        </center>\r\n                        \r\n                        \r\n                    </span>\r\n\r\n                    <span>\r\n                        <center>\r\n                        <span className='fontopt3'>CheckOut </span> <button className=\"btn btn-danger reshape\">{out}</button>\r\n                        </center>\r\n                                                \r\n                    </span>\r\n                    \r\n                    <span>\r\n                        <center>\r\n                        <span className='fontopt2'>Vacant </span> <button className=\"btn btn-danger reshape\">{output}</button>\r\n                        </center>\r\n                        \r\n                        \r\n                    </span>\r\n                    \r\n                </div>\r\n                \r\n                <Offcanvas show={this.state.show}>\r\n                    \r\n                    <div className=\"headerbackgrd3\">\r\n                        <Offcanvas.Body>\r\n                            <div className=\"bg-dark p-3 size3\">\r\n                                <CloseButton variant=\"white\" onClick={()=>this.handleClose()}/>\r\n                                \r\n                            </div>\r\n                            <div className=\"menu\">\r\n                                <center>\r\n                                    <p className=\"menulist\" type=\"button\" onClick={()=>{this.props.history.push('/');this.handleClose()}}>Dashboard</p>\r\n                                </center>\r\n                            </div>\r\n                            <div className=\"menu\">\r\n                                <center>\r\n                                    <p className=\"menulist\" type=\"button\" onClick={()=>{this.props.history.push('/RoomChart');this.handleClose()}}>Room Chart</p>\r\n                                </center>\r\n                            </div>\r\n                            <div className=\"menu\">\r\n                                <center>\r\n                                    <p className=\"menulist\" type=\"button\" onClick={()=>{this.props.history.push('/Reservation');this.handleClose()}}>Reservations</p>\r\n                                </center>\r\n                            </div>\r\n                            <div className=\"menu\">\r\n                                <center>\r\n                                    <p className=\"menulist\" type=\"button\" onClick={()=>{this.props.history.push('/Occupancy');this.handleClose()}}>Occupancy</p>\r\n                                </center>\r\n                            </div>\r\n                            <div className=\"menu\">\r\n                                <center>\r\n                                    <p className=\"menulist\" type=\"button\" onClick={()=>{this.props.history.push('/SalesReport');this.handleClose()}}>Daily Sales</p>\r\n                                </center>\r\n                            </div>\r\n                            \r\n                            \r\n                        </Offcanvas.Body>\r\n                    </div>\r\n                    \r\n                </Offcanvas>\r\n                \r\n                \r\n            \r\n            </>\r\n        )\r\n    }\r\n\r\n    componentDidMount(){\r\n        console.log (\">>> Inside RMdidMount\")\r\n        \r\n        fetch(`${checkinDataUrl}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            \r\n            this.setState({\r\n                checkinData:data.map(item => item.roomStatus).filter(item=> item !=='green'&& item !=='black')\r\n                \r\n            })\r\n            this.setState({\r\n                vacantData:data.map(item => item.roomStatus).filter(item=> item ==='green')\r\n                \r\n            })\r\n            this.setState({\r\n                CheckOut:data.map(item => item.roomStatus).filter(item=> item ==='black')\r\n                \r\n            })\r\n            \r\n            \r\n        })\r\n\r\n        \r\n      \r\n    }\r\n    \r\n    \r\n}\r\n\r\n\r\nexport default withRouter(Newheader);","import React, { Component } from 'react';\r\nimport 'react-responsive-modal/styles.css';\r\nimport './BarReport.css';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Modal} from 'react-responsive-modal';\r\n\r\n\r\nconst loginUrl = \"https://dinamauth.onrender.com/api/auth/login\";\r\nconst getUserData = \"https://dinamauth.onrender.com/api/auth/userinfo\";\r\nconst postAdminUsers = \"https://dinamauth.onrender.com/api/auth/register\";\r\n\r\n\r\n\r\n\r\nclass Adlogin extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        console.log(\">>> inside loginConstructor\", props)\r\n       this.state={\r\n            password:'',\r\n            email:'',\r\n            message:'',\r\n            login: true,\r\n            userdat:'',\r\n            userMail:'',\r\n            registerfirst: false,\r\n\r\n            username:'',\r\n            userphone:'',\r\n            useremailAD:'',\r\n            userpassword:''\r\n\r\n        }\r\n        \r\n    }\r\n\r\n    loginNow(){\r\n        try{\r\n            const msg = {\r\n                password:`${this.state.password}`,\r\n                email:`${this.state.email}`,\r\n                message:`${this.state.message}`,\r\n                \r\n            }\r\n            fetch(loginUrl,{\r\n                method:'POST',\r\n                headers:{\r\n                    'accept':'application/json',\r\n                    'content-type':'application/json'\r\n                },\r\n                body:JSON.stringify(msg)\r\n            })\r\n    \r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                if(data.auth ===  false){\r\n                    this.setState({message:data.token});\r\n                    alert(this.state.message)\r\n                }else{\r\n                    localStorage.setItem('rtk',data.token)\r\n                    \r\n                    setTimeout(()=>{\r\n                        fetch(getUserData, {\r\n                            method: 'GET',\r\n                            headers:{\r\n                                'x-access-token':localStorage.getItem('rtk')\r\n                            }\r\n                        })\r\n                        .then((res) => res.json())\r\n                        .then((data) => {\r\n                            \r\n                            localStorage.setItem('userdata',data.name);\r\n                            localStorage.setItem('emailAD',data.email);\r\n                            this.setState({\r\n                                userMail: data.email\r\n                            })\r\n                            if(this.state.userMail==='admin@orangegroove.com'){\r\n                                this.setState({\r\n                                    login:false,\r\n                                    registerfirst:true\r\n                                    \r\n                                })\r\n                                \r\n                                \r\n                                \r\n                            }\r\n                            else{\r\n                                // this.setState({\r\n                                //     login:false,\r\n                                //     registerfirst:false\r\n                                                                    \r\n                                // })\r\n                                // window.location.reload();\r\n                                this.props.history.push('/')\r\n                            }\r\n                        })\r\n                        \r\n                    },1000)\r\n\r\n                    \r\n                    \r\n                }\r\n            })\r\n        }catch(e) {\r\n            console.log(e)\r\n        }\r\n        \r\n\r\n    }\r\n\r\n    async registerNow() {\r\n       \r\n        try {\r\n            const Reg = {\r\n                name: `${this.state.username}`,\r\n                phone: `${this.state.userphone}`,\r\n                email: `${this.state.useremailAD}`,\r\n                password: `${this.state.userpassword}`,\r\n               \r\n            }\r\n\r\n            fetch(postAdminUsers,{\r\n                method:'POST',\r\n                headers:{\r\n                    'accept':'application/json',\r\n                    'content-type':'application/json'\r\n                },\r\n                body:JSON.stringify(Reg)\r\n            })\r\n    \r\n            .then(this.setState({\r\n                login: true,\r\n                registerfirst:false\r\n            }))\r\n            \r\n        }catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n    \r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n        \r\n    }\r\n\r\n    onCloseModallogin(){\r\n        this.setState({\r\n            login: false\r\n        })\r\n        \r\n    }\r\n\r\n    closePage(){\r\n        this.setState({\r\n            registerfirst: false,\r\n            login: true\r\n        })\r\n    }\r\n\r\n    \r\n    render() {\r\n        console.log (\">>> Inside logindetails\", this.state)\r\n        return (\r\n            <>\r\n                \r\n                <Modal open={this.state.login} center>\r\n                    \r\n                    <div>\r\n                        <div className=\"formdesign152\">\r\n                            <h6 className=\"mb-3\">Login First</h6>\r\n                            <div>\r\n                                <center>\r\n                                    \r\n                                    <input autoComplete=\"off\" className=\"form-control mb-3 formsize51\" name=\"email\" require placeholder=\"Input Email\" value={this.state.email} onChange={this.handleChange}/>\r\n                                    <input type=\"password\" autoComplete=\"off\" className=\"form-control mb-3 formsize51\" name=\"password\" require placeholder=\"Enter Password\" value={this.state.password} onChange={this.handleChange}/>\r\n                                    <button disabled={this.state.email===''} className=\"btn btn-warning formsize91\" onClick={()=>this.loginNow()}>Login</button>\r\n                                    \r\n                                </center>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </Modal>\r\n                \r\n                    \r\n                \r\n                <Modal open={this.state.registerfirst} onClose={()=>this.closePage()} center>\r\n                    \r\n                        <div>\r\n                            <div className=\"formdesign152\">\r\n                                <h6 className=\"mb-3\">Register First</h6>\r\n                                <div>\r\n                                    <input autoComplete=\"off\" className=\"form-control mb-3 formsize51\" name=\"username\" require placeholder=\"Enter Name\" value={this.state.username} onChange={this.handleChange}/>\r\n                                    <input autoComplete=\"off\" className=\"form-control mb-3 formsize51\" name=\"userphone\" require placeholder=\"Enter Phone\" value={this.state.userphone} onChange={this.handleChange}/>\r\n                                    <input autoComplete=\"off\" className=\"form-control mb-3 formsize51\" name=\"useremailAD\" require placeholder=\"Enter Email\" value={this.state.useremailAD} onChange={this.handleChange}/>\r\n                                    <input type=\"password\" autoComplete=\"off\" className=\"form-control mb-3 formsize51\" name=\"userpassword\" require placeholder=\"Enter Password\" value={this.state.userpassword} onChange={this.handleChange}/>\r\n                                    <button disabled={this.state.useremailAD===''||this.state.username===''}className=\"btn btn-warning formsize91\" onClick={()=>this.registerNow()}>Register</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    \r\n                </Modal>\r\n               \r\n            </>\r\n        );\r\n    }\r\n        \r\n    \r\n}\r\n\r\nexport default Adlogin;","import React,{Component} from 'react';\r\nimport './Dashboard.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport NumberFormat from 'react-number-format';\r\nimport {Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip,} from 'chart.js';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport Offcanvas from 'react-bootstrap/Offcanvas';\r\nimport CloseButton from 'react-bootstrap/CloseButton';\r\nimport moment from 'moment';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Newheader from '../Newheader';\r\nimport Adlogin from '../Adlogin';\r\n\r\n\r\nChartJS.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    BarElement,\r\n    Title,\r\n    Tooltip\r\n    \r\n);\r\n\r\n\r\n// Rooms Transactions Url //\r\nconst occupancyChart = \"/getrmstatus\";\r\nconst otherSales = \"/otherSalesPoints\";\r\nconst guestDeposits = \"/GetTmpRmDep\";\r\n\r\n// Restaurant Transactions Url //\r\nconst getRestaurantSales = \"/restaurantSales\"; \r\n\r\n// PoolBar Transactions Url //\r\nconst getPoolBarSales = \"/poolbarSales\"; \r\n\r\n// Bar Transactions Url //\r\nconst getBarNow = \"/barSales\"; \r\n\r\nconst getclubSales = \"/clubSales\"; \r\n\r\n//Active work date//\r\nconst getWorkDate = \"/getActive\";\r\n\r\n\r\nclass NewDashboard extends Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        console.log(\">>>Inside Constructor\")\r\n\r\n        this.state = {\r\n           \r\n            allOccupied:'',\r\n            allVacant:'',\r\n            allCorporate:'',\r\n            allIndividual:'',\r\n            allStaff:'',\r\n            allComplimentary:'',\r\n            allCheckout:'',\r\n\r\n            \r\n            TotalSales:0,\r\n            POS:0,\r\n            Cash:0,\r\n            Transfer:0,\r\n            Complimentary:0,\r\n            Room:0,\r\n\r\n\r\n            OtherTotalSales:0,\r\n            OtherRoom:0,\r\n            OtherComplimentary:0,\r\n            OtherTransfer:0,\r\n            OtherCash:0,\r\n            OtherPOS:0,\r\n\r\n            ReceptionSales:0,\r\n           \r\n            date:'',\r\n\r\n            RestTotalSales:0,\r\n            RestRoom:0,\r\n            RestComplimentary:0,\r\n            RestTransfer:0,\r\n            RestCash:0,\r\n            RestPOS:0,\r\n\r\n            PoolTotalSales:0,\r\n            PoolRoom:0,\r\n            PoolComplimentary:0,\r\n            PoolTransfer:0,\r\n            PoolCash:0,\r\n            PoolPOS:0,\r\n           \r\n\r\n            BarTotalSales:0,\r\n            BarRoom:0,\r\n            BarComplimentary:0,\r\n            BarTransfer:0,\r\n            BarCash:0,\r\n            BarPOS:0,\r\n\r\n            ClubTotalSales:0,\r\n            ClubRoom:0,\r\n            ClubComplimentary:0,\r\n            ClubTransfer:0,\r\n            ClubCash:0,\r\n            ClubPOS:0,\r\n\r\n            Gtotal:0,\r\n           \r\n            Blogin:'',\r\n\r\n            labels:['Rooms','Others','Restaurant', 'Reservation'],\r\n\r\n            showRooms:false,\r\n            showOthers:false,\r\n            showRest:false,\r\n            showPool:false,\r\n            showClub:false,\r\n            showInnerBar:false\r\n\r\n        };\r\n\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n                       \r\n        })\r\n\r\n    }\r\n\r\n    handleRoomShow(){\r\n        this.setState({showRooms:true})\r\n    }\r\n\r\n    handleRoomClose(){\r\n        this.setState({showRooms:false})\r\n    }\r\n\r\n    handleOthersShow(){\r\n        this.setState({showOthers:true})\r\n    }\r\n\r\n    handleOthersClose(){\r\n        this.setState({showOthers:false})\r\n    }\r\n\r\n    handleRestShow(){\r\n        this.setState({showRest:true})\r\n    }\r\n\r\n    handleRestClose(){\r\n        this.setState({showRest:false})\r\n    }\r\n\r\n    handlePoolShow(){\r\n        this.setState({showPool:true})\r\n    }\r\n\r\n    handlePoolClose(){\r\n        this.setState({showPool:false})\r\n    }\r\n\r\n    handleNiteClose(){\r\n        this.setState({showClub:false})\r\n    }\r\n\r\n    handleNiteShow(){\r\n        this.setState({showClub:true})\r\n    }\r\n\r\n    handleInnerBarShow(){\r\n        this.setState({showInnerBar:true})\r\n    }\r\n    \r\n    handleInnerBarClose(){\r\n        this.setState({showInnerBar:false})\r\n    }\r\n\r\n\r\n\r\n\r\n    logout(){\r\n        localStorage.removeItem('rtk');\r\n        localStorage.removeItem('userdata');\r\n               \r\n    }\r\n\r\n        \r\n    render(){\r\n        console.log (\">>> Inside Render\", this.state)\r\n\r\n        var count=this.state.allOccupied;\r\n        if (count!=='green'){\r\n            var result = count.length;\r\n        }\r\n\r\n        var labels=this.state.labels;\r\n\r\n        const data = {\r\n            labels:labels,\r\n            datasets: [\r\n              {\r\n                \r\n                data: [this.state.TotalSales, this.state.OtherTotalSales, this.state.RestTotalSales, this.state.ClubTotalSales,],\r\n                backgroundColor: ['chartreuse', 'cornflowerblue', 'cyan', 'hotpink']\r\n              }\r\n            \r\n            ]\r\n        };\r\n    \r\n        const options = {\r\n            responsive: true,\r\n            plugins: {\r\n           \r\n              title: {\r\n                display: true,\r\n                text: 'Income Chart',\r\n              },\r\n              \r\n            },\r\n            \r\n        };\r\n\r\n        var transDate = moment(this.state.date).format('YYYY-DD-MMM');\r\n\r\n        if(localStorage.getItem('rtk')==null||localStorage.getItem('userdata')===null||localStorage.getItem('emailAD')==='admin@orangegroove.com'){\r\n            return(\r\n                <>\r\n                    <Adlogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n\r\n       \r\n        return(\r\n            <>\r\n                <Newheader/>\r\n                <div className=\"Dashbackground\">\r\n                    \r\n                    <div className=\"heading\">\r\n                        \r\n                        <h5 type=\"button\" onClick={()=>this.props.history.push('/AppMenu')}>Dashboard</h5>\r\n                        \r\n                        \r\n                        \r\n                    </div>\r\n                    \r\n                    <div className=\"miniDash\">\r\n                        <Button variant=\"Danger\" className=\"DashSheet1\" type=\"button\" onClick={()=>this.handleRoomShow()}>\r\n                            \r\n                            <p className=\"mobileText\">Rooms: <NumberFormat value={this.state.TotalSales}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                           \r\n                            \r\n                        </Button>\r\n\r\n                        <Button variant=\"Danger\" className=\"DashSheet2\" type=\"button\" onClick={()=>this.handleOthersShow()}> \r\n                           \r\n                            <p className=\"mobileText\">Other Sales: <NumberFormat value={this.state.OtherTotalSales}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                            \r\n                            \r\n                        </Button>\r\n\r\n                        <Button variant=\"Danger\" className=\"DashSheet3\" type=\"button\" onClick={()=>this.handleRestShow()}> \r\n                            \r\n                            <p className=\"mobileText\">Restaurant: <NumberFormat value={this.state.RestTotalSales}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                            \r\n                        \r\n                        </Button>\r\n\r\n                         {/* <Button variant=\"Danger\" className=\"DashSheet4\" type=\"button\" onClick={()=>this.handleInnerBarShow()}>\r\n                           \r\n                            <p className=\"mobileText\">VIP Bar: <NumberFormat value={this.state.BarTotalSales}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                           \r\n                            \r\n                        </Button> */}\r\n\r\n                        {/* <Button variant=\"Danger\" className=\"DashSheet5\" type=\"button\" onClick={()=>this.handlePoolShow()}> \r\n                            \r\n                            <p className=\"mobileText\">Pool Bar: <NumberFormat value={this.state.PoolTotalSales}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                            \r\n                        \r\n                        </Button> */}\r\n\r\n                        <Button variant=\"Danger\" className=\"DashSheet4\" type=\"button\" onClick={()=>this.handleNiteShow()}> \r\n                            \r\n                            <p className=\"mobileText\">Reservation: <NumberFormat value={this.state.ClubTotalSales}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                            \r\n                        \r\n                        </Button>\r\n\r\n                        {/* <Button variant=\"Danger\" className=\"DashSheet6\" type=\"button\" onClick={()=>this.handleClubShowNow()}> \r\n                           \r\n                            <p className=\"mobileText\">Reservation: <NumberFormat value={this.state.ClubTotalSales}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                           \r\n                            \r\n                        </Button> */}\r\n\r\n                        <Button variant=\"Danger\" className=\"DashSheet6\"> \r\n                            <Card.Title>\r\n                                <p className=\"mobileText\">Total: <NumberFormat value={parseInt(this.state.ClubTotalSales) + parseInt(this.state.RestTotalSales) + parseInt(this.state.OtherTotalSales) + parseInt(this.state.TotalSales)}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                            </Card.Title>\r\n                            \r\n                        </Button>\r\n                    </div>\r\n                    \r\n\r\n                    <div className=\"chart\">\r\n                        <Bar \r\n                            options={options} \r\n                            data={data} \r\n                        />\r\n                        \r\n                    </div>\r\n\r\n                    \r\n                </div>\r\n                    \r\n                    \r\n                <Offcanvas show={this.state.showRooms}>\r\n                    \r\n                    <div className=\"missionvission\">\r\n                        <Offcanvas.Body>\r\n                            <div className=\"size13\">\r\n                                <CloseButton onClick={()=>this.handleRoomClose()}/>\r\n                            </div>\r\n                            <div className=\"missionStatement\">\r\n                                    \r\n                                <Card.Title className=\"mb-3\">\r\n                                    Rooms Payment Analysis\r\n                                </Card.Title>\r\n                                <hr/>\r\n                                <Card.Subtitle className=\"mb-3 text-muted editsub2\">\r\n                                   {transDate}\r\n                                </Card.Subtitle>\r\n                                <Card.Text className=\"mb-3 editsub\">\r\n                                    <div className=\"tableBody\">\r\n                                        <p className=\"adjust5\">Occupancy:{result}</p>\r\n                                        <p className=\"adjust5\">Cash: <NumberFormat value={this.state.Cash}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                        <p className=\"adjust5\">POS: <NumberFormat value={this.state.POS}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                        <p className=\"adjust5\">Transfer: <NumberFormat value={this.state.Transfer}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                        <p className=\"adjust5\">Room: <NumberFormat value= {this.state.Room}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                        <p className=\"adjust5\">Reservation Deposit.: <NumberFormat value= {this.state.Complimentary}thousandSeparator={true}displayType={\"text\"}/></p> \r\n                                        <p className=\"adjust5\">Total: <NumberFormat value= {this.state.TotalSales}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                        \r\n                                    </div>\r\n                                </Card.Text>\r\n                                    \r\n                                <br/><br/>\r\n                                \r\n                                        \r\n                            </div>\r\n                            \r\n                            \r\n                        </Offcanvas.Body>\r\n                    </div>\r\n                    \r\n                </Offcanvas>\r\n\r\n                <Offcanvas show={this.state.showOthers}>\r\n                    \r\n                    <div className=\"missionvission\">\r\n                        <Offcanvas.Body>\r\n                            <div className=\"size13\">\r\n                                <CloseButton onClick={()=>this.handleOthersClose()}/>\r\n                            </div>\r\n                            <div className=\"missionStatement\">\r\n                                    \r\n                                <Card.Title className=\"mb-3\">\r\n                                    Others Payment Analysis\r\n                                </Card.Title>\r\n                                <hr/>\r\n                                <Card.Subtitle className=\"mb-3 text-muted editsub\">\r\n                                   {transDate}\r\n                                </Card.Subtitle>\r\n                                <Card.Text className=\"mb-3 editsub\">\r\n                                    <div className=\"tableBody\">\r\n                                                \r\n                                        <p className=\"adjust5\">Cash: <NumberFormat value={this.state.OtherCash}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                        <p className=\"adjust5\">POS: <NumberFormat value={this.state.OtherPOS}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                        <p className=\"adjust5\">Transfer: <NumberFormat value={this.state.OtherTransfer}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                        <p className=\"adjust5\">Room: <NumberFormat value= {this.state.OtherRoom}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                        <p className=\"adjust5\">Comp.: <NumberFormat value= {this.state.OtherComplimentary}thousandSeparator={true}displayType={\"text\"}/></p> \r\n                                        <p className=\"adjust5\">Total: <NumberFormat value= {this.state.OtherTotalSales}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                                \r\n                                    </div>\r\n                                   \r\n                                </Card.Text>\r\n                                    \r\n                                <br/><br/>\r\n                                \r\n                                        \r\n                            </div>\r\n                            \r\n                        </Offcanvas.Body>\r\n                    </div>\r\n                    \r\n                </Offcanvas>\r\n\r\n                <Offcanvas show={this.state.showRest}>\r\n                    \r\n                    <div className=\"missionvission\">\r\n                        <Offcanvas.Body>\r\n                            <div className=\"size13\">\r\n                                <CloseButton onClick={()=>this.handleRestClose()}/>\r\n                            </div>\r\n                            <div className=\"missionStatement\">\r\n                                    \r\n                                <Card.Title className=\"mb-3\">\r\n                                    Restaurant Payment Analysis\r\n                                </Card.Title>\r\n                                <hr/>\r\n                                <Card.Subtitle className=\"mb-3 text-muted editsub\">\r\n                                   {transDate}\r\n                                </Card.Subtitle>\r\n                                <Card.Text className=\"mb-3 editsub\">\r\n                                    <div className=\"tableBody\">\r\n                                                    \r\n                                        <p className=\"adjust5\">Cash: <NumberFormat value={this.state.RestCash}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                        <p className=\"adjust5\">POS: <NumberFormat value={this.state.RestPOS}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                        <p className=\"adjust5\">Transfer: <NumberFormat value={this.state.RestTransfer}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                        <p className=\"adjust5\">Room: <NumberFormat value= {this.state.RestRoom}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                        <p className=\"adjust5\">Comp.: <NumberFormat value= {this.state.RestComplimentary}thousandSeparator={true}displayType={\"text\"}/></p> \r\n                                        <p className=\"adjust5\">Total: <NumberFormat value= {this.state.RestTotalSales}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                                \r\n                                    </div>\r\n                                </Card.Text>\r\n                                    \r\n                              \r\n                                <br/><br/>\r\n                                \r\n                                        \r\n                            </div>\r\n                            \r\n                        </Offcanvas.Body>\r\n                    </div>\r\n                    \r\n                </Offcanvas>\r\n\r\n                {/* <Offcanvas show={this.state.showInnerBar}>\r\n                    \r\n                    <div className=\"missionvission\">\r\n                        <Offcanvas.Body>\r\n                            <div className=\"size13\">\r\n                                <CloseButton onClick={()=>this.handleInnerBarClose()}/>\r\n                            </div>\r\n                            <div className=\"missionStatement\">\r\n                                    \r\n                                <Card.Title className=\"mb-3\">\r\n                                    Bar Payment Analysis\r\n                                </Card.Title>\r\n                                <hr/>\r\n                                <Card.Subtitle className=\"mb-3 text-muted editsub\">\r\n                                   {transDate}\r\n                                </Card.Subtitle>\r\n                                <Card.Text className=\"mb-3 editsub\">\r\n                                    <div className=\"tableBody\">\r\n                                                        \r\n                                        <p className=\"adjust5\">Cash: <NumberFormat value={this.state.BarCash}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                        <p className=\"adjust5\">POS: <NumberFormat value={this.state.BarPOS}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                        <p className=\"adjust5\">Transfer: <NumberFormat value={this.state.BarTransfer}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                        <p className=\"adjust5\">Room: <NumberFormat value= {this.state.BarRoom}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                        <p className=\"adjust5\">Comp.: <NumberFormat value= {this.state.BarComplimentary}thousandSeparator={true}displayType={\"text\"}/></p> \r\n                                        <p className=\"adjust5\">Total: <NumberFormat value= {this.state.BarTotalSales}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                                \r\n                                    </div>\r\n                                </Card.Text>\r\n                                    \r\n                              \r\n                                <br/><br/>\r\n                                \r\n                                        \r\n                            </div>\r\n                            \r\n                        </Offcanvas.Body>\r\n                    </div>\r\n                    \r\n                </Offcanvas> */}\r\n\r\n\r\n                {/* <Offcanvas show={this.state.showPool}>\r\n                    \r\n                    <div className=\"missionvission\">\r\n                        <Offcanvas.Body>\r\n                            <div className=\"size13\">\r\n                                <CloseButton onClick={()=>this.handlePoolClose()}/>\r\n                            </div>\r\n                            <div className=\"missionStatement\">\r\n                                    \r\n                                <Card.Title className=\"mb-3\">\r\n                                    PoolBar Payment Analysis\r\n                                </Card.Title>\r\n                                <hr/>\r\n                                <Card.Subtitle className=\"mb-3 text-muted editsub\">\r\n                                   {transDate}\r\n                                </Card.Subtitle>\r\n                                <Card.Text className=\"mb-3 editsub\">\r\n                                    <div className=\"tableBody\">\r\n                                                    \r\n                                        <p className=\"adjust5\">Cash: <NumberFormat value={this.state.PoolCash}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                        <p className=\"adjust5\">POS: <NumberFormat value={this.state.PoolPOS}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                        <p className=\"adjust5\">Transfer: <NumberFormat value={this.state.PoolTransfer}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                        <p className=\"adjust5\">Room: <NumberFormat value= {this.state.PoolRoom}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                        <p className=\"adjust5\">Comp.: <NumberFormat value= {this.state.PoolComplimentary}thousandSeparator={true}displayType={\"text\"}/></p> \r\n                                        <p className=\"adjust5\">Total: <NumberFormat value= {this.state.PoolTotalSales}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                                \r\n                                    </div>\r\n                                </Card.Text>\r\n                                    \r\n                              \r\n                                <br/><br/>\r\n                                \r\n                                        \r\n                            </div>\r\n                            \r\n                        </Offcanvas.Body>\r\n\r\n                        \r\n                    </div>\r\n                    \r\n                </Offcanvas> */}\r\n\r\n                <Offcanvas show={this.state.showClub}>\r\n                    \r\n                            <div className=\"missionvission\">\r\n                                <Offcanvas.Body>\r\n                                    <div className=\"size13\">\r\n                                        <CloseButton onClick={()=>this.handleNiteClose()}/>\r\n                                    </div>\r\n                                    <div className=\"missionStatement\">\r\n                                            \r\n                                        <Card.Title className=\"mb-3\">\r\n                                            Reservation Payment Analysis\r\n                                        </Card.Title>\r\n                                        <hr/>\r\n                                        <Card.Subtitle className=\"mb-3 text-muted editsub\">\r\n                                        {transDate}\r\n                                        </Card.Subtitle>\r\n                                        <Card.Text className=\"mb-3 editsub\">\r\n                                            <div className=\"tableBody\">\r\n                                                                \r\n                                                <p className=\"adjust5\">Cash: <NumberFormat value={this.state.ClubCash}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                                <p className=\"adjust5\">POS: <NumberFormat value={this.state.ClubPOS}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                                <p className=\"adjust5\">Transfer: <NumberFormat value={this.state.ClubTransfer}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                                <p className=\"adjust5\">Room: <NumberFormat value= {this.state.ClubRoom}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                                <p className=\"adjust5\">Comp.: <NumberFormat value= {this.state.ClubComplimentary}thousandSeparator={true}displayType={\"text\"}/></p> \r\n                                                <p className=\"adjust5\">Total: <NumberFormat value= {this.state.ClubTotalSales}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                                        \r\n                                            </div>\r\n                                        </Card.Text>\r\n                                            \r\n                                    \r\n                                        <br/><br/>\r\n                                        \r\n                                                \r\n                                    </div>\r\n                                    \r\n                                </Offcanvas.Body>\r\n                            </div>\r\n                            \r\n                        </Offcanvas>\r\n\r\n                \r\n\r\n                                \r\n            \r\n            </>\r\n        )\r\n\r\n        \r\n    }\r\n    componentDidMount(){\r\n        console.log (\">>> Inside DidMount\")\r\n        fetch(`${occupancyChart}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                allOccupied:data.map(item => item.roomStatus).filter(item=> item !=='green'&& item !=='black'),\r\n                allVacant:data.map(item => item.roomStatus).filter(item=> item ==='green'),\r\n                allCorporate:data.map(item => item.roomStatus).filter(item=> item ==='blue'),\r\n                allIndividual:data.map(item => item.roomStatus).filter(item=> item ==='blueviolet'),\r\n                allStaff:data.map(item => item.roomStatus).filter(item=> item ==='deeppink'),\r\n                allComplimentary:data.map(item => item.roomStatus).filter(item=> item ==='orange'),\r\n                allCheckout:data.map(item => item.roomStatus).filter(item=> item ==='black')\r\n            })\r\n            \r\n        })\r\n\r\n        fetch(`${guestDeposits}`, {method:'GET'})\r\n        .then((resp) => resp.json())    \r\n        .then((data) => {\r\n            \r\n\r\n            var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.POSAmount)\r\n            }, 0);\r\n            this.setState({POS:allPOS})\r\n\r\n            var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.CashAmount)\r\n            }, 0);\r\n            this.setState({Cash:allCash})\r\n\r\n            var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.TransferAmount)\r\n            }, 0);\r\n            this.setState({Transfer:allTransfer})\r\n\r\n            var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.CompDebit)\r\n            }, 0);\r\n            this.setState({Complimentary:allComp})\r\n\r\n            var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.roomDebit)\r\n            }, 0);\r\n            this.setState({Room:allRoom})\r\n            \r\n            var Sales = 0;\r\n            var dailySales = Sales + this.state.Cash + this.state.POS + this.state.Transfer + this.state.Room\r\n            this.setState({TotalSales:dailySales})\r\n            \r\n        })\r\n\r\n        fetch(`${otherSales}`, {method:'GET'})\r\n        .then((resp) => resp.json())    \r\n        .then((data) => {\r\n           \r\n\r\n            var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.POSAmount)\r\n            }, 0);\r\n            this.setState({OtherPOS:allPOS})\r\n\r\n            var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.CashAmount)\r\n            }, 0);\r\n            this.setState({OtherCash:allCash})\r\n\r\n            var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.TransferAmount)\r\n            }, 0);\r\n            this.setState({OtherTransfer:allTransfer})\r\n\r\n            var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.CompDebit)\r\n            }, 0);\r\n            this.setState({OtherComplimentary:allComp})\r\n\r\n            var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.roomDebit)\r\n            }, 0);\r\n             this.setState({OtherRoom:allRoom})\r\n            \r\n            var Sales2 = 0;\r\n            var dailySales2 = Sales2 + this.state.OtherCash + this.state.OtherPOS + this.state.OtherTransfer + this.state.OtherRoom \r\n            this.setState({OtherTotalSales:parseInt(dailySales2)})\r\n            \r\n        })\r\n\r\n        fetch(`${getRestaurantSales}`, {method:'GET'})\r\n        .then((resp) => resp.json())    \r\n        .then((data) => {\r\n            var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.POSAmount)\r\n            }, 0);\r\n            this.setState({RestPOS:allPOS})\r\n\r\n            var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.CashAmount)\r\n            }, 0);\r\n            this.setState({RestCash:allCash})\r\n\r\n            var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.TransferAmount)\r\n            }, 0);\r\n            this.setState({RestTransfer:allTransfer})\r\n\r\n            var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.CompDebit)\r\n            }, 0);\r\n            this.setState({RestComplimentary:allComp})\r\n\r\n            var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.roomDebit)\r\n            }, 0);\r\n            this.setState({RestRoom:allRoom})\r\n            \r\n            var Sales3 = 0;\r\n            var dailySales3 = Sales3 + this.state.RestCash + this.state.RestPOS + this.state.RestTransfer + this.state.RestRoom\r\n            this.setState({RestTotalSales:dailySales3})\r\n            \r\n        })\r\n\r\n        fetch(`${getPoolBarSales}`, {method:'GET'})\r\n        .then((resp) => resp.json())    \r\n        .then((data) => {\r\n            var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.POSAmount)\r\n            }, 0);\r\n            this.setState({PoolPOS:allPOS})\r\n\r\n            var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.CashAmount)\r\n            }, 0);\r\n            this.setState({PoolCash:allCash})\r\n\r\n            var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.TransferAmount)\r\n            }, 0);\r\n            this.setState({PoolTransfer:allTransfer})\r\n\r\n            var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.CompDebit)\r\n            }, 0);\r\n            this.setState({PoolComplimentary:allComp})\r\n\r\n            var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.roomDebit)\r\n            }, 0);\r\n            this.setState({PoolRoom:allRoom})\r\n            \r\n            var Sales5 = 0;\r\n            var dailySales5 = Sales5 + this.state.PoolCash + this.state.PoolPOS + this.state.PoolTransfer + this.state.PoolRoom\r\n            this.setState({PoolTotalSales:dailySales5})\r\n            \r\n        })\r\n\r\n        fetch(`${getBarNow}`, {method:'GET'})\r\n        .then((resp) => resp.json())    \r\n        .then((data) => {\r\n            var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.POSAmount)\r\n            }, 0);\r\n            this.setState({BarPOS:allPOS})\r\n\r\n            var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.CashAmount)\r\n            }, 0);\r\n            this.setState({BarCash:allCash})\r\n\r\n            var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.TransferAmount)\r\n            }, 0);\r\n            this.setState({BarTransfer:allTransfer})\r\n\r\n            var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.CompDebit)\r\n            }, 0);\r\n            this.setState({BarComplimentary:allComp})\r\n\r\n            var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.roomDebit)\r\n            }, 0);\r\n            this.setState({BarRoom:allRoom})\r\n            \r\n            var Sales4 = 0;\r\n            var dailySales4 = Sales4 + this.state.BarCash + this.state.BarPOS + this.state.BarTransfer + this.state.BarRoom\r\n            this.setState({BarTotalSales:dailySales4})\r\n            \r\n        })\r\n\r\n        fetch(`${getclubSales}`, {method:'GET'})\r\n        .then((resp) => resp.json())    \r\n        .then((data) => {\r\n            var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.POSAmount)\r\n            }, 0);\r\n            this.setState({ClubPOS:allPOS})\r\n\r\n            var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.CashAmount)\r\n            }, 0);\r\n            this.setState({ClubCash:allCash})\r\n\r\n            var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.TransferAmount)\r\n            }, 0);\r\n            this.setState({ClubTransfer:allTransfer})\r\n\r\n            var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.CompDebit)\r\n            }, 0);\r\n            this.setState({ClubComplimentary:allComp})\r\n\r\n            var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.roomDebit)\r\n            }, 0);\r\n            this.setState({ClubRoom:allRoom})\r\n            \r\n            var Sales6 = 0;\r\n            var dailySales6 = Sales6 + this.state.ClubCash + this.state.ClubPOS + this.state.ClubTransfer + this.state.ClubRoom\r\n            this.setState({ClubTotalSales:dailySales6})\r\n            \r\n        })\r\n\r\n        fetch(`${getWorkDate}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            data.map((item)=>{\r\n                this.setState({date:item.date})\r\n                return 'ok'\r\n            })\r\n            \r\n           \r\n        })\r\n\r\n        this.myTimer = setTimeout(() => {\r\n            fetch(`${occupancyChart}`, {method:'GET'})\r\n            .then((resp) => resp.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    allOccupied:data.map(item => item.roomStatus).filter(item=> item !=='green'&& item !=='black'),\r\n                    allVacant:data.map(item => item.roomStatus).filter(item=> item ==='green'),\r\n                    allCorporate:data.map(item => item.roomStatus).filter(item=> item ==='blue'),\r\n                    allIndividual:data.map(item => item.roomStatus).filter(item=> item ==='blueviolet'),\r\n                    allStaff:data.map(item => item.roomStatus).filter(item=> item ==='deeppink'),\r\n                    allComplimentary:data.map(item => item.roomStatus).filter(item=> item ==='orange'),\r\n                    allCheckout:data.map(item => item.roomStatus).filter(item=> item ==='black')\r\n                })\r\n                \r\n            })\r\n\r\n            fetch(`${guestDeposits}`, {method:'GET'})\r\n            .then((resp) => resp.json())    \r\n            .then((data) => {\r\n                \r\n\r\n                var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POSAmount)\r\n                }, 0);\r\n                this.setState({POS:allPOS})\r\n\r\n                var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CashAmount)\r\n                }, 0);\r\n                this.setState({Cash:allCash})\r\n\r\n                var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.TransferAmount)\r\n                }, 0);\r\n                this.setState({Transfer:allTransfer})\r\n\r\n                var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CompDebit)\r\n                }, 0);\r\n                this.setState({Complimentary:allComp})\r\n\r\n                var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.roomDebit)\r\n                }, 0);\r\n                this.setState({Room:allRoom})\r\n                \r\n                var Sales = 0;\r\n                var dailySales = Sales + this.state.Cash + this.state.POS + this.state.Transfer + this.state.Room\r\n                this.setState({TotalSales:dailySales})\r\n                \r\n                })\r\n\r\n            fetch(`${otherSales}`, {method:'GET'})\r\n            .then((resp) => resp.json())    \r\n            .then((data) => {\r\n            \r\n\r\n                var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POSAmount)\r\n                }, 0);\r\n                this.setState({OtherPOS:allPOS})\r\n\r\n                var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CashAmount)\r\n                }, 0);\r\n                this.setState({OtherCash:allCash})\r\n\r\n                var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.TransferAmount)\r\n                }, 0);\r\n                this.setState({OtherTransfer:allTransfer})\r\n\r\n                var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CompDebit)\r\n                }, 0);\r\n                this.setState({OtherComplimentary:allComp})\r\n\r\n                var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.roomDebit)\r\n                }, 0);\r\n                this.setState({OtherRoom:allRoom})\r\n                \r\n                var Sales2 = 0;\r\n                var dailySales2 = Sales2 + this.state.OtherCash + this.state.OtherPOS + this.state.OtherTransfer + this.state.OtherRoom\r\n                this.setState({OtherTotalSales:dailySales2})\r\n                \r\n            })\r\n\r\n            fetch(`${getRestaurantSales}`, {method:'GET'})\r\n            .then((resp) => resp.json())    \r\n            .then((data) => {\r\n                var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POSAmount)\r\n                }, 0);\r\n                this.setState({RestPOS:allPOS})\r\n\r\n                var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CashAmount)\r\n                }, 0);\r\n                this.setState({RestCash:allCash})\r\n\r\n                var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.TransferAmount)\r\n                }, 0);\r\n                this.setState({RestTransfer:allTransfer})\r\n\r\n                var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CompDebit)\r\n                }, 0);\r\n                this.setState({RestComplimentary:allComp})\r\n\r\n                var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.roomDebit)\r\n                }, 0);\r\n                this.setState({RestRoom:allRoom})\r\n                \r\n                var Sales3 = 0;\r\n                var dailySales3 = Sales3 + this.state.RestCash + this.state.RestPOS + this.state.RestTransfer + this.state.RestRoom\r\n                this.setState({RestTotalSales:dailySales3})\r\n                \r\n            })\r\n\r\n\r\n            fetch(`${getPoolBarSales}`, {method:'GET'})\r\n            .then((resp) => resp.json())    \r\n            .then((data) => {\r\n                var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POSAmount)\r\n                }, 0);\r\n                this.setState({PoolPOS:allPOS})\r\n\r\n                var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CashAmount)\r\n                }, 0);\r\n                this.setState({PoolCash:allCash})\r\n\r\n                var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.TransferAmount)\r\n                }, 0);\r\n                this.setState({PoolTransfer:allTransfer})\r\n\r\n                var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CompDebit)\r\n                }, 0);\r\n                this.setState({PoolComplimentary:allComp})\r\n\r\n                var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.roomDebit)\r\n                }, 0);\r\n                this.setState({PoolRoom:allRoom})\r\n                \r\n                var Sales5 = 0;\r\n                var dailySales5 = Sales5 + this.state.PoolCash + this.state.PoolPOS + this.state.PoolTransfer + this.state.PoolRoom\r\n                this.setState({PoolTotalSales:dailySales5})\r\n                \r\n            })\r\n\r\n            fetch(`${getclubSales}`, {method:'GET'})\r\n        .then((resp) => resp.json())    \r\n        .then((data) => {\r\n            var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.POSAmount)\r\n            }, 0);\r\n            this.setState({ClubPOS:allPOS})\r\n\r\n            var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.CashAmount)\r\n            }, 0);\r\n            this.setState({ClubCash:allCash})\r\n\r\n            var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.TransferAmount)\r\n            }, 0);\r\n            this.setState({ClubTransfer:allTransfer})\r\n\r\n            var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.CompDebit)\r\n            }, 0);\r\n            this.setState({ClubComplimentary:allComp})\r\n\r\n            var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.roomDebit)\r\n            }, 0);\r\n            this.setState({ClubRoom:allRoom})\r\n            \r\n            var Sales6 = 0;\r\n            var dailySales6 = Sales6 + this.state.ClubCash + this.state.ClubPOS + this.state.ClubTransfer + this.state.ClubRoom\r\n            this.setState({ClubTotalSales:dailySales6})\r\n            \r\n        })\r\n\r\n            fetch(`${getBarNow}`, {method:'GET'})\r\n            .then((resp) => resp.json())    \r\n            .then((data) => {\r\n                var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POSAmount)\r\n                }, 0);\r\n                this.setState({BarPOS:allPOS})\r\n\r\n                var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CashAmount)\r\n                }, 0);\r\n                this.setState({BarCash:allCash})\r\n\r\n                var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.TransferAmount)\r\n                }, 0);\r\n                this.setState({BarTransfer:allTransfer})\r\n\r\n                var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CompDebit)\r\n                }, 0);\r\n                this.setState({BarComplimentary:allComp})\r\n\r\n                var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.roomDebit)\r\n                }, 0);\r\n                this.setState({BarRoom:allRoom})\r\n                \r\n                var Sales4 = 0;\r\n                var dailySales4 = Sales4 + this.state.BarCash + this.state.BarPOS + this.state.BarTransfer + this.state.BarRoom\r\n                this.setState({BarTotalSales:dailySales4})\r\n                \r\n            })\r\n\r\n            \r\n        },3000);\r\n\r\n                       \r\n                     \r\n        \r\n        this.myTimer = setInterval(() => {\r\n            fetch(`${occupancyChart}`, {method:'GET'})\r\n            .then((resp) => resp.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    allOccupied:data.map(item => item.roomStatus).filter(item=> item !=='green'&& item !=='black'),\r\n                    allVacant:data.map(item => item.roomStatus).filter(item=> item ==='green'),\r\n                    allCorporate:data.map(item => item.roomStatus).filter(item=> item ==='blue'),\r\n                    allIndividual:data.map(item => item.roomStatus).filter(item=> item ==='blueviolet'),\r\n                    allStaff:data.map(item => item.roomStatus).filter(item=> item ==='deeppink'),\r\n                    allComplimentary:data.map(item => item.roomStatus).filter(item=> item ==='orange'),\r\n                    allCheckout:data.map(item => item.roomStatus).filter(item=> item ==='black')\r\n                })\r\n                \r\n            })\r\n\r\n            fetch(`${guestDeposits}`, {method:'GET'})\r\n            .then((resp) => resp.json())    \r\n            .then((data) => {\r\n                \r\n\r\n                var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POSAmount)\r\n                }, 0);\r\n                this.setState({POS:allPOS})\r\n\r\n                var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CashAmount)\r\n                }, 0);\r\n                this.setState({Cash:allCash})\r\n\r\n                var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.TransferAmount)\r\n                }, 0);\r\n                this.setState({Transfer:allTransfer})\r\n\r\n                var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CompDebit)\r\n                }, 0);\r\n                this.setState({Complimentary:allComp})\r\n\r\n                var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.roomDebit)\r\n                }, 0);\r\n                this.setState({Room:allRoom})\r\n                \r\n                var Sales = 0;\r\n                var dailySales = Sales + this.state.Cash + this.state.POS + this.state.Transfer + this.state.Room\r\n                this.setState({TotalSales:dailySales})\r\n                \r\n                })\r\n\r\n            fetch(`${otherSales}`, {method:'GET'})\r\n            .then((resp) => resp.json())    \r\n            .then((data) => {\r\n            \r\n\r\n                var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POSAmount)\r\n                }, 0);\r\n                this.setState({OtherPOS:allPOS})\r\n\r\n                var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CashAmount)\r\n                }, 0);\r\n                this.setState({OtherCash:allCash})\r\n\r\n                var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.TransferAmount)\r\n                }, 0);\r\n                this.setState({OtherTransfer:allTransfer})\r\n\r\n                var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CompDebit)\r\n                }, 0);\r\n                this.setState({OtherComplimentary:allComp})\r\n\r\n                var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.roomDebit)\r\n                }, 0);\r\n                this.setState({OtherRoom:allRoom})\r\n                \r\n                var Sales2 = 0;\r\n                var dailySales2 = Sales2 + this.state.OtherCash + this.state.OtherPOS + this.state.OtherTransfer + this.state.OtherRoom\r\n                this.setState({OtherTotalSales:dailySales2})\r\n                \r\n            })\r\n\r\n            fetch(`${getRestaurantSales}`, {method:'GET'})\r\n            .then((resp) => resp.json())    \r\n            .then((data) => {\r\n                var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POSAmount)\r\n                }, 0);\r\n                this.setState({RestPOS:allPOS})\r\n\r\n                var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CashAmount)\r\n                }, 0);\r\n                this.setState({RestCash:allCash})\r\n\r\n                var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.TransferAmount)\r\n                }, 0);\r\n                this.setState({RestTransfer:allTransfer})\r\n\r\n                var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CompDebit)\r\n                }, 0);\r\n                this.setState({RestComplimentary:allComp})\r\n\r\n                var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.roomDebit)\r\n                }, 0);\r\n                this.setState({RestRoom:allRoom})\r\n                \r\n                var Sales3 = 0;\r\n                var dailySales3 = Sales3 + this.state.RestCash + this.state.RestPOS + this.state.RestTransfer + this.state.RestRoom\r\n                this.setState({RestTotalSales:dailySales3})\r\n                \r\n            })\r\n\r\n\r\n            fetch(`${getPoolBarSales}`, {method:'GET'})\r\n            .then((resp) => resp.json())    \r\n            .then((data) => {\r\n                var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POSAmount)\r\n                }, 0);\r\n                this.setState({PoolPOS:allPOS})\r\n\r\n                var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CashAmount)\r\n                }, 0);\r\n                this.setState({PoolCash:allCash})\r\n\r\n                var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.TransferAmount)\r\n                }, 0);\r\n                this.setState({PoolTransfer:allTransfer})\r\n\r\n                var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CompDebit)\r\n                }, 0);\r\n                this.setState({PoolComplimentary:allComp})\r\n\r\n                var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.roomDebit)\r\n                }, 0);\r\n                this.setState({PoolRoom:allRoom})\r\n                \r\n                var Sales5 = 0;\r\n                var dailySales5 = Sales5 + this.state.PoolCash + this.state.PoolPOS + this.state.PoolTransfer + this.state.PoolRoom\r\n                this.setState({PoolTotalSales:dailySales5})\r\n                \r\n            })\r\n\r\n            fetch(`${getBarNow}`, {method:'GET'})\r\n            .then((resp) => resp.json())    \r\n            .then((data) => {\r\n                var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POSAmount)\r\n                }, 0);\r\n                this.setState({BarPOS:allPOS})\r\n\r\n                var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CashAmount)\r\n                }, 0);\r\n                this.setState({BarCash:allCash})\r\n\r\n                var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.TransferAmount)\r\n                }, 0);\r\n                this.setState({BarTransfer:allTransfer})\r\n\r\n                var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CompDebit)\r\n                }, 0);\r\n                this.setState({BarComplimentary:allComp})\r\n\r\n                var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.roomDebit)\r\n                }, 0);\r\n                this.setState({BarRoom:allRoom})\r\n                \r\n                var Sales4 = 0;\r\n                var dailySales4 = Sales4 + this.state.BarCash + this.state.BarPOS + this.state.BarTransfer + this.state.BarRoom\r\n                this.setState({BarTotalSales:dailySales4})\r\n                \r\n            })\r\n\r\n            fetch(`${getclubSales}`, {method:'GET'})\r\n            .then((resp) => resp.json())    \r\n            .then((data) => {\r\n                var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POSAmount)\r\n                }, 0);\r\n                this.setState({ClubPOS:allPOS})\r\n\r\n                var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CashAmount)\r\n                }, 0);\r\n                this.setState({ClubCash:allCash})\r\n\r\n                var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.TransferAmount)\r\n                }, 0);\r\n                this.setState({ClubTransfer:allTransfer})\r\n\r\n                var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CompDebit)\r\n                }, 0);\r\n                this.setState({ClubComplimentary:allComp})\r\n\r\n                var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.roomDebit)\r\n                }, 0);\r\n                this.setState({ClubRoom:allRoom})\r\n                \r\n                var Sales6 = 0;\r\n                var dailySales6 = Sales6 + this.state.ClubCash + this.state.ClubPOS + this.state.ClubTransfer + this.state.ClubRoom\r\n                this.setState({ClubTotalSales:dailySales6})\r\n            \r\n            })\r\n\r\n           \r\n        },300000);\r\n\r\n\r\n    }\r\n}\r\nexport default NewDashboard;\r\n\r\n","import React, { Component } from 'react';\r\nimport './Reception.css';\r\nimport NumberFormat from 'react-number-format';\r\nimport moment from 'moment';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport addDays from 'date-fns/addDays';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport Newheader from './Newheader';\r\nimport Adlogin from './Adlogin';\r\n\r\nconst occuppancyUrl = \"/checkin\";\r\nconst checkInDataUrl = \"/getrmstatus\";\r\nconst occuppancySearchData = \"/getDailyOccuppancy?\";\r\n\r\n\r\nclass CheckInReport extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\">>>Inside ROConstructor\")\r\n\r\n        this.state = {\r\n            occuppancyData:'',\r\n            occuppancySearch:'',\r\n            date:'',\r\n            percentOcc:'',\r\n            NumOccuppied:'',\r\n            NumAllRms:'',\r\n            AllRms:'',\r\n            percentCalculated:'',\r\n           Blogin:'',\r\n\r\n        }\r\n        this.checkinhandleChange = this.checkinhandleChange.bind(this);\r\n        \r\n\r\n    }\r\n\r\n    checkinhandleChange(date) {\r\n        this.setState({\r\n            date: date,\r\n           \r\n\r\n        });\r\n    }\r\n\r\n    renderDate() {\r\n        return (\r\n            <div>\r\n                <DatePicker\r\n                    selected={this.state.date}\r\n                    onChange={this.checkinhandleChange}\r\n                    maxDate={addDays(new Date(),0)}\r\n                    dropdownMode=\"select\"\r\n                    dateFormat=\"MMM/d/ yyyy\"\r\n                    className=\"form-control mb-3 formsize printing alignText112\"\r\n                    placeholderText='Select Start Date'\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    findOccuppancySearch(){\r\n\r\n        var searchDate = moment(this.state.date).format('MMM DD YYYY')\r\n\r\n        this.setState({occuppancyData:''})\r\n\r\n        fetch(`${occuppancySearchData}occuppancyToday=${searchDate}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            \r\n            data.map((item) =>{\r\n                this.setState({\r\n                    occuppancyData:item.OccuppancyData\r\n                })\r\n                return 'ok'\r\n            })\r\n        \r\n        });\r\n\r\n\r\n    }\r\n\r\n    resetOccupancy(){\r\n\r\n        // var searchDate = moment(this.state.date).format('MMM DD YYYY')\r\n\r\n        this.setState({occuppancyData:'',date:''})\r\n\r\n        fetch(`${occuppancyUrl}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                occuppancyData:data\r\n            })\r\n            \r\n        });\r\n\r\n\r\n    }\r\n\r\n    renderOccupancyData(data){\r\n        if (data){\r\n            data.sort((a, b) => (a.roomNumbers) - (b.roomNumbers));\r\n            return data.map((item) => {\r\n                var arrDt = moment(item.arrivalDate).format('YYYY-DD-MMM')\r\n                var depDt = moment(item.departureDate).format('YYYY-DD-MMM')\r\n                return(\r\n                    <>\r\n                        <tr key= {item._id}>\r\n                            <td className=\"table-light table-striped adjust225\">{item.fname} {item.lname}</td>\r\n                            <td className=\"table-light table-striped adjust222\">{item.roomNumbers}</td>\r\n                            <td className=\"table-light table-striped adjust225\">{item.roomtypeName}</td>\r\n                            <td className=\"table-light table-striped adjust20\"><NumberFormat value= {item.roomRate}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust222\">{item.discounType}</td>\r\n                            <td className=\"table-light table-striped adjust20\"><NumberFormat value= {item.discountAmount}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust20\"><NumberFormat value= {item.dailyRate}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2\">{arrDt}</td>\r\n                            <td className=\"table-light table-striped adjust2\">{depDt}</td>\r\n                                    \r\n                        </tr>\r\n                    </>\r\n                )\r\n            })\r\n        }\r\n        else{\r\n            return(\r\n                <>\r\n                    <Spinner animation=\"border\" variant=\"primary\" />\r\n                    <Spinner animation=\"border\" variant=\"danger\" />\r\n                    <Spinner animation=\"border\" variant=\"warning\" />\r\n                </>\r\n            )\r\n        }\r\n    }\r\n   \r\n\r\n    render() {\r\n        console.log(\">>> Inside ROtrender\", this.state)\r\n        if(localStorage.getItem('rtk')==null||localStorage.getItem('userdata')===null||localStorage.getItem('emailAD')==='admin@orangegroove.com'){\r\n            return(\r\n                <>\r\n                    <Adlogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n        \r\n        return (\r\n            <>\r\n                <Newheader/>\r\n                <div className=\"container\">\r\n                    \r\n                    <br/>\r\n                    <center><h5>Room Occupancy Report</h5>\r\n                        \r\n                    </center>\r\n                    <br/>\r\n                    <table className=\"table table-hover\">\r\n                    \r\n                        <thead className=\"table-warning\">\r\n                            <tr>\r\n                                <th className=\"adjust5\">Names</th>\r\n                                <th className=\"adjust5\">Room</th>\r\n                                <th className=\"adjust5\">Type</th>\r\n                                <th className=\"adjust5\">Rate</th>\r\n                                <th className=\"adjust5\">DiscType</th>\r\n                                <th className=\"adjust5\">DiscAmt</th>\r\n                                <th className=\"adjust5\">Daily Rate</th>\r\n                                <th className=\"adjust5\">Arr</th>\r\n                                <th className=\"adjust5\">Dep</th>\r\n                                \r\n                                        \r\n                            </tr>\r\n                        </thead>\r\n                        <tbody className=\"table table-hover\">\r\n                            {this.renderOccupancyData(this.state.occuppancyData)}\r\n                        \r\n                        </tbody>\r\n                        <br/>\r\n                    \r\n                    </table>\r\n                    <div className=\"row\">\r\n                        <h6>Occupancy Summary:</h6>\r\n                        <hr/>\r\n                        <div className=\"col-4\">\r\n                            <p><span className=\"textSize30\">No. of Occupied Rooms:</span><span className=\"textSize31\"> {this.state.NumOccuppied}</span></p>\r\n                        </div>\r\n                        <div className=\"col-4\">\r\n                            <p><span className=\"textSize30\">Total Num of Rooms:</span><span className=\"textSize31\"> {this.state.NumAllRms}</span></p>\r\n                        </div>\r\n                        <div className=\"col-4\">\r\n                            <p><span className=\"textSize30\">Percentage Occupancy:</span><span className=\"textSize31\"> {this.state.percentCalculated} %</span></p>\r\n                        </div>\r\n                        <hr/>\r\n                    </div>\r\n\r\n                    <center>\r\n                        <button className=\"btn btn-warning printing\" onClick={ () => window.print()}>Print</button>\r\n                        <button className=\"btn btn-danger printing space\" onClick={ () => this.props.history.push('/')}>Close</button>\r\n                    </center>\r\n                   \r\n\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n    async componentDidMount() {\r\n        console.log (\">>> Inside ROdidMount\")\r\n        \r\n        fetch(`${occuppancyUrl}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) =>{\r\n            this.setState({\r\n                occuppancyData:data,\r\n               \r\n            \r\n            })\r\n            \r\n        })\r\n        fetch(`${checkInDataUrl}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) =>{\r\n            this.setState({\r\n                percentOcc:data.map(item => item.roomStatus).filter(item=> item !=='green'&& item !=='black'),\r\n                AllRms:data.map(item => item.roomStatus).filter(item=> item) \r\n            \r\n            })\r\n            var occuppiedRooms=this.state.percentOcc;\r\n            var occuppied = occuppiedRooms.length;\r\n            this.setState({NumOccuppied:occuppied});\r\n\r\n            var AllRooms=this.state.AllRms;\r\n            var AllRms = parseInt(AllRooms.length);\r\n            this.setState({NumAllRms:AllRms});\r\n            \r\n\r\n            var percOcc = 0;\r\n            percOcc = percOcc + parseFloat(this.state.NumOccuppied) / parseFloat(this.state.NumAllRms) * 100;\r\n            this.setState({percentCalculated:percOcc.toFixed(2)})\r\n            \r\n        })\r\n\r\n        \r\n    }\r\n}\r\n\r\nexport default CheckInReport;","import React, { Component } from 'react';\r\nimport { Calendar, dateFnsLocalizer } from 'react-big-calendar';\r\nimport format from 'date-fns/format';\r\nimport parse from 'date-fns/parse';\r\nimport startOfWeek from 'date-fns/startOfWeek';\r\nimport getDay from 'date-fns/getDay';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport { locales } from 'moment';\r\nimport './Reception.css';\r\nimport {Link} from 'react-router-dom';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport Newheader from './Newheader';\r\nimport Adlogin from './Adlogin';\r\n\r\n\r\n\r\nconst localizer = dateFnsLocalizer({\r\n   format,\r\n   parse,\r\n   startOfWeek,\r\n   getDay,\r\n   locales,\r\n})\r\n\r\nconst GetReservation = \"/reservation\";\r\n\r\n\r\nclass Reservation extends Component {\r\n    constructor(props) {\r\n        super(props);\r\nconsole.log(\">>> inside ReservContructor\", props)\r\n        this.state = {\r\n            events: [],\r\n            _id:Math.floor(Math.random()*100000000),\r\n            fname:'',\r\n            lname:'',\r\n            allDay: '',\r\n            start: '',\r\n            end: '',\r\n            room: '',\r\n            title:'',\r\n            phone:'',\r\n            rsvAmount:'',\r\n            displayAllRoomNums:'',\r\n            displayOccupiedRoomNums:'',\r\n            printBTN:'Print',\r\n            transactionDate:''\r\n            \r\n            \r\n            \r\n        };\r\n        this.starthandleChange = this.starthandleChange.bind(this);\r\n        this.endhandleChange = this.endhandleChange.bind(this);\r\n    }\r\n\r\n    // logout(){\r\n    //     localStorage.removeItem('userInfo');\r\n    //     this.setState({\r\n    //         login:true\r\n    //     })\r\n        \r\n    // }\r\n\r\n    starthandleChange(date) {\r\n        this.setState({\r\n            start: date\r\n        });\r\n        var newtitle =(this.state.room+  ' '   +this.state.fname+  ' '  +this.state.lname+ ' ' +this.state.phone)\r\n        this.setState({title:newtitle})\r\n    }\r\n\r\n    endhandleChange(date) {\r\n        this.setState({\r\n            end: date\r\n        });\r\n    }\r\n\r\n    render() {\r\n        console.log (\">>> Inside Rsvdetails\", this.state)\r\n        \r\n        if(localStorage.getItem('rtk')==null||localStorage.getItem('userdata')===null||localStorage.getItem('emailAD')==='admin@orangegroove.com'){\r\n            return(\r\n                <>\r\n                    <Adlogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n        \r\n        return (\r\n            <>\r\n                <Newheader/>\r\n                <div  className=\"background993\">\r\n                    <div>\r\n                            \r\n                        <h4 style = {{marginLeft:'20px'}}>Reservations</h4>\r\n                            \r\n                    </div>\r\n                    \r\n                    \r\n                    <div>\r\n                        <Calendar \r\n                            localizer={localizer} events={this.state.events} \r\n                            startAccessor=\"start\" endAccessor= \"end\" className=\"calendarSettings\"\r\n                            selectable={true}\r\n                            onSelectEvent={this.handleEventSelection} \r\n                        /> \r\n                    </div>\r\n                              \r\n                    <div>\r\n                        <center>\r\n                            <>\r\n                                <Link to=\"/\">\r\n                                    <button className=\"btn btn-danger space\">Close</button>\r\n                                </Link>\r\n                            </>\r\n                        </center>\r\n                    </div>   \r\n                    \r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n    async componentDidMount(){\r\n        console.log(\">>> Inside RsvDidMount\", this.state)\r\n        fetch(`${GetReservation}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                events:data\r\n            })\r\n            data.map((item)=>{\r\n                this.setState({rsvAmount:item.rsvAmount})\r\n                return 'ok'\r\n            })\r\n            \r\n            \r\n        })\r\n    }\r\n}\r\n\r\nexport default Reservation;","import React, { Component } from 'react';\r\nimport './Reception.css';\r\nimport NumberFormat from 'react-number-format';\r\nimport DatePicker from 'react-datepicker';\r\nimport moment from 'moment';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport addDays from 'date-fns/addDays';\r\nimport Newheader from './Newheader';\r\nimport Adlogin from './Adlogin';\r\n// import Spinner from 'react-bootstrap/Spinner';\r\n\r\n\r\n\r\nconst getAllbar = \"/salesReport?BarSales=Bar%20Sales&&\";\r\nconst getAllRest = \"/salesReport?restSales=Restaurant%20Sales&&\";\r\nconst getAllOther = \"/salesReport?otherSales=Other%20Sales&&\";\r\nconst getAllPool = \"/salesReport?dailypoolsales=Pool%20Bar%20Sales&&\";\r\nconst getAllClub = \"/salesReport?clubSales=Reservation&&\";\r\nconst getAllLaundry = \"/salesReport?LaundrySales=Laundry%20Sales&&\";\r\nconst getAllGym = \"/salesReport?gymnasiumSNow=Gymnasium%20Sales&&\";\r\nconst getAllSmoothie = \"/salesReport?smoothiSales=Suya%20Sales&&\";\r\nconst getAllSwimming = \"/salesReport?swimmingSales=Swimming%20Sales&&\";\r\nconst getAllMinimart = \"/salesReport?minimartSales=Mart%20Sales&&\";\r\nconst getAllBbq = \"/salesReport?BarbeQueSales=Barbeque%20Sales&&\";\r\nconst getAllshisha = \"/salesReport?shishaSales=Games%20Sales&&\";\r\nconst getAllHHire = \"/salesReport?HHSales=Hall%20Hire&&\";\r\nconst getAllDeposits = \"/salesReport?accDepositReceptn=Accommodation%20Deposits&&\";\r\n\r\n\r\nclass CashCollection extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\">>>Inside CashConstructor\",props)\r\n        this.state = {\r\n            RoomDeposits:'',\r\n            RoomTotal:0,\r\n            depPOS:0,\r\n            depCash:0,\r\n            depTransfer:0,\r\n            depRoom:0,\r\n            BarSales:0,\r\n            BarTotal:0,\r\n            barPOS:0,\r\n            barCash:0,\r\n            barTransfer:0,\r\n            barRoom:0,\r\n            RestSales:'',\r\n            RestTotal:0,\r\n            restPOS:0,\r\n            restCash:0,\r\n            restTransfer:0,\r\n            restRoom:0,\r\n            otherSales:0,\r\n            othersTotal:0,\r\n            otherPOS:0,\r\n            otherCash:0,\r\n            otherTransfer:0,\r\n            otherRoom:0,\r\n            POSCal:0,\r\n            CashCal:0,\r\n            TransferCal:0,\r\n            RoomCal:0,\r\n            poolPOS:0,\r\n            poolCash:0,\r\n            poolRoom:0,\r\n            poolTransfer:0,\r\n            poolSales:0,\r\n            PoolTotal:0,\r\n\r\n            clubPOS:0,\r\n            clubCash:0,\r\n            clubRoom:0,\r\n            clubTransfer:0,\r\n            clubSales:0,\r\n            clubTotal:0,\r\n\r\n            laundryPOS:0,\r\n            laundryCash:0,\r\n            laundryRoom:0,\r\n            laundryTransfer:0,\r\n            laundrySales:0,\r\n            laundryTotal:0,\r\n\r\n            gymPOS:0,\r\n            gymCash:0,\r\n            gymRoom:0,\r\n            gymTransfer:0,\r\n            gymSales:0,\r\n            gymTotal:0,\r\n\r\n            smoothiePOS:0,\r\n            smoothieCash:0,\r\n            smoothieRoom:0,\r\n            smoothieTransfer:0,\r\n            smoothieSales:0,\r\n            smoothieTotal:0,\r\n\r\n            swimmingPOS:0,\r\n            swimmingCash:0,\r\n            swimmingRoom:0,\r\n            swimmingTransfer:0,\r\n            swimmingSales:0,\r\n            swimmingTotal:0,\r\n\r\n            minimartPOS:0,\r\n            minimartCash:0,\r\n            minimartRoom:0,\r\n            minimartTransfer:0,\r\n            minimartSales:0,\r\n            minimartTotal:0,\r\n\r\n            BarbequePOS:0,\r\n            BarbequeCash:0,\r\n            BarbequeRoom:0,\r\n            BarbequeTransfer:0,\r\n            BarbequeSales:0,\r\n            BarbequeTotal:0,\r\n\r\n            shishaPOS:0,\r\n            shishaCash:0,\r\n            shishaRoom:0,\r\n            shishaTransfer:0,\r\n            shishaSales:0,\r\n            shishaTotal:0,\r\n\r\n            HallHirePOS:0,\r\n            HallHireCash:0,\r\n            HallHireRoom:0,\r\n            HallHireTransfer:0,\r\n            HallHireSales:0,\r\n            HallHireTotal:0,\r\n            \r\n            startdate:'',\r\n            endDate:'',\r\n\r\n            shift:'',\r\n            date:'',\r\n\r\n            Hotelname:'',\r\n            Hoteladdress:'',\r\n            Hotelphone:''\r\n\r\n            \r\n        };\r\n        this.checkinhandleChange = this.checkinhandleChange.bind(this);\r\n        this.endhandleChange = this.endhandleChange.bind(this);\r\n\r\n    }\r\n    checkinhandleChange(date) {\r\n        this.setState({\r\n            date: date,\r\n           \r\n\r\n        });\r\n    }\r\n\r\n    endhandleChange(date) {\r\n        this.setState({\r\n            endDate: date\r\n        });\r\n    }\r\n\r\n    \r\n    renderDate() {\r\n        return (\r\n            <div>\r\n                <DatePicker\r\n                    selected={this.state.date}\r\n                    onChange={this.checkinhandleChange}\r\n                    maxDate={addDays(new Date(),0)}\r\n                    dropdownMode=\"select\"\r\n                    dateFormat=\"MMM/d/ yyyy\"\r\n                    className=\"form-control mb-3 formsize printing alignText112\"\r\n                    placeholderText='Select Start Date'\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderendDate() {\r\n        return (\r\n            <div>\r\n                <DatePicker\r\n                    selected={this.state.endDate}\r\n                    onChange={this.endhandleChange}\r\n                    maxDate={(new Date())}\r\n                    dropdownMode=\"select\"\r\n                    dateFormat=\"MMM/d/ yyyy\"\r\n                    className=\"form-control mb-3 formsize printing alignText112 mvrght\"\r\n                    placeholderText=\"Search End Date\"\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    handleChange=(event)=>{\r\n        \r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n\r\n    }\r\n\r\n    findSalesReport(){\r\n        var thisDate = moment(this.state.date).format('MMM DD YYYY')\r\n        \r\n        this.setState({\r\n            depRoom:0,\r\n            depTransfer:0,\r\n            depCash:0,\r\n            depPOS:0,\r\n            RoomTotal:0,\r\n            RoomDeposits:'',\r\n            // RestSales:'',\r\n            // BarSales:'',\r\n            // otherSales:'',\r\n            // poolSales:'',\r\n            // clubSales:'',\r\n            // laundrySales:'',\r\n            // gymSales:'',\r\n            // smoothieSales:'',\r\n            // minimartSales:'',\r\n            // BarbequeSales:'',\r\n            // shishaSales:'',\r\n            // HallHireSales:''\r\n\r\n\r\n\r\n        })\r\n        \r\n            fetch(`${getAllDeposits}today=${thisDate}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({RoomDeposits:data});\r\n                \r\n                    data.map((item) => {\r\n\r\n                        \r\n                        var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                            return totals + parseInt(item.POS)\r\n                        }, 0);\r\n                        this.setState({depPOS:allPOS});\r\n        \r\n                        var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                            return totals + parseInt(item.Cash)\r\n                        }, 0);\r\n                        this.setState({depCash:allCash});\r\n        \r\n                        var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                            return totals + parseInt(item.Transfer)\r\n                        }, 0);\r\n                        this.setState({depTransfer:allTransfer});\r\n        \r\n                        var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                            return totals + parseInt(item.Room)\r\n                        }, 0);\r\n                        this.setState({depRoom:allRoom});\r\n                        \r\n                        this.myTimer = setTimeout(() =>{\r\n                            var RmSales = 0;\r\n                            var roomSales = RmSales + parseInt(this.state.depCash) + parseInt(this.state.depPOS) + parseInt(this.state.depTransfer) + parseInt(this.state.depRoom)\r\n                            this.setState({RoomTotal:roomSales});\r\n                        \r\n                        },2000)\r\n                        \r\n                        return 'ok'\r\n                    })\r\n                \r\n                if((data).length===0){\r\n                    // alert('No Data Found')\r\n                    this.setState({\r\n                        depRoom:0,\r\n                        depTransfer:0,\r\n                        depCash:0,\r\n                        depPOS:0,\r\n                        RoomTotal:0\r\n\r\n                    })\r\n                    \r\n                    \r\n                }\r\n                \r\n                \r\n                \r\n            });\r\n        \r\n                \r\n       \r\n        fetch(`${getAllRest}resttoday=${thisDate}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n        this.setState({RestSales:data});\r\n        \r\n            data.map((item) => {\r\n              \r\n                var restallPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POS)\r\n                }, 0);\r\n                this.setState({restPOS:restallPOS});\r\n\r\n                var restallCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Cash)\r\n                }, 0);\r\n                this.setState({restCash:restallCash});\r\n\r\n                var restallTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Transfer)\r\n                }, 0);\r\n                this.setState({restTransfer:restallTransfer});\r\n\r\n                var restallRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Room)\r\n                }, 0);\r\n                this.setState({restRoom:restallRoom});\r\n\r\n                this.myTimer = setTimeout(() => {\r\n                    var AllRest = 0;\r\n                    var restSales = AllRest + parseInt(this.state.restCash) + parseInt(this.state.restPOS) + parseInt(this.state.restTransfer) + parseInt(this.state.restRoom)\r\n                    this.setState({RestTotal:restSales})\r\n                },2000)\r\n                \r\n                \r\n                return 'ok'\r\n            })\r\n        \r\n            if((data).length===0){\r\n                this.setState({\r\n                    restRoom:0,\r\n                    restTransfer:0,\r\n                    restCash:0,\r\n                    restPOS:0,\r\n                    RestTotal:0\r\n\r\n                })\r\n            }\r\n        \r\n        });\r\n\r\n        fetch(`${getAllbar}bartoday=${thisDate}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n        this.setState({BarSales:data});\r\n        \r\n            data.map((item) => {\r\n\r\n                var barallPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POS)\r\n                }, 0);\r\n                this.setState({barPOS:barallPOS});\r\n\r\n                var barallCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Cash)\r\n                }, 0);\r\n                this.setState({barCash:barallCash});\r\n\r\n                var barallTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Transfer)\r\n                }, 0);\r\n                this.setState({barTransfer:barallTransfer});\r\n\r\n                var barallRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Room)\r\n                }, 0);\r\n                this.setState({barRoom:barallRoom});\r\n\r\n                this.myTimer = setTimeout(() => {\r\n                    var BarTotal = 0;\r\n                    var barSales = BarTotal + parseInt(this.state.barCash) + parseInt(this.state.barPOS) + parseInt(this.state.barTransfer) + parseInt(this.state.barRoom)\r\n                    this.setState({BarTotal:barSales})\r\n\r\n                },2000)\r\n                                    \r\n                return 'ok'\r\n            })\r\n        \r\n            if((data).length===0){\r\n                \r\n                this.setState({\r\n                    barRoom:0,\r\n                    barTransfer:0,\r\n                    barCash:0,\r\n                    barPOS:0,\r\n                    BarTotal:0\r\n\r\n                })\r\n            }\r\n        \r\n        });\r\n        \r\n\r\n        fetch(`${getAllOther}othertoday=${thisDate}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n        this.setState({otherSales:data});\r\n        \r\n            data.map((item) => {\r\n\r\n                var othersallPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POS)\r\n                }, 0);\r\n                this.setState({otherPOS:othersallPOS});\r\n\r\n                var othersallCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Cash)\r\n                }, 0);\r\n                this.setState({otherCash:othersallCash});\r\n\r\n                var othersallTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Transfer)\r\n                }, 0);\r\n                this.setState({otherTransfer:othersallTransfer});\r\n\r\n                var othersallRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Room)\r\n                }, 0);\r\n                this.setState({otherRoom:othersallRoom});\r\n\r\n                this.myTimer = setTimeout(() => {\r\n                    var AllOthers = 0;\r\n                    var OtherSales = AllOthers + parseInt(this.state.otherCash) + parseInt(this.state.otherPOS) + parseInt(this.state.otherTransfer) + parseInt(this.state.otherRoom)\r\n                    this.setState({othersTotal:OtherSales})\r\n                \r\n                },2000)\r\n                \r\n                return 'ok'\r\n            })\r\n        \r\n            if((data).length===0){\r\n                \r\n                this.setState({\r\n                    otherRoom:0,\r\n                    otherTransfer:0,\r\n                    otherCash:0,\r\n                    otherPOS:0,\r\n                    othersTotal:0\r\n\r\n                })\r\n            }\r\n            \r\n        });\r\n\r\n        fetch(`${getAllPool}dailypooltoday=${thisDate}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n        this.setState({poolSales:data});\r\n        \r\n            data.map((item) => {\r\n\r\n                var poolallPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POS)\r\n                }, 0);\r\n                this.setState({poolPOS:poolallPOS});\r\n\r\n                var poolallCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Cash)\r\n                }, 0);\r\n                this.setState({poolCash:poolallCash});\r\n\r\n                var poolallTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Transfer)\r\n                }, 0);\r\n                this.setState({poolTransfer:poolallTransfer});\r\n\r\n                var poolallRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Room)\r\n                }, 0);\r\n                this.setState({poolRoom:poolallRoom});\r\n\r\n                this.myTimer = setTimeout(() => {\r\n                    var AllPool = 0;\r\n                    var AlPoolSales = AllPool + parseInt(this.state.poolCash) + parseInt(this.state.poolPOS) + parseInt(this.state.poolTransfer) + parseInt(this.state.poolRoom)\r\n                    this.setState({PoolTotal:AlPoolSales})\r\n                \r\n                },2000)\r\n                \r\n                return 'ok'\r\n            })\r\n        \r\n            if((data).length===0){\r\n                \r\n                this.setState({\r\n                    poolRoom:0,\r\n                    poolTransfer:0,\r\n                    poolCash:0,\r\n                    poolPOS:0,\r\n                    PoolTotal:0\r\n\r\n                })\r\n            }\r\n            \r\n        });\r\n\r\n        fetch(`${getAllClub}clubtoday=${thisDate}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n        this.setState({clubSales:data});\r\n        \r\n            data.map((item) => {\r\n\r\n                var cluballPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POS)\r\n                }, 0);\r\n                this.setState({clubPOS:cluballPOS});\r\n\r\n                var cluballCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Cash)\r\n                }, 0);\r\n                this.setState({clubCash:cluballCash});\r\n\r\n                var cluballTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Transfer)\r\n                }, 0);\r\n                this.setState({clubTransfer:cluballTransfer});\r\n\r\n                var cluballRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Room)\r\n                }, 0);\r\n                this.setState({clubRoom:cluballRoom});\r\n\r\n                this.myTimer = setTimeout(() => {\r\n                    var AllClub = 0;\r\n                    var AlClubSales = AllClub + parseInt(this.state.clubCash) + parseInt(this.state.clubPOS) + parseInt(this.state.clubTransfer) + parseInt(this.state.clubRoom)\r\n                    this.setState({clubTotal:AlClubSales})\r\n                \r\n                },2000)\r\n                \r\n                return 'ok'\r\n            })\r\n        \r\n            if((data).length===0){\r\n                \r\n                this.setState({\r\n                    clubRoom:0,\r\n                    clubTransfer:0,\r\n                    clubCash:0,\r\n                    clubPOS:0,\r\n                    clubTotal:0\r\n\r\n                })\r\n            }\r\n            \r\n        });\r\n\r\n        fetch(`${getAllLaundry}laundrytoday=${thisDate}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n        this.setState({laundrySales:data});\r\n        \r\n            data.map((item) => {\r\n\r\n                var laundryllPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POS)\r\n                }, 0);\r\n                this.setState({laundryPOS:laundryllPOS});\r\n\r\n                var laundryallCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Cash)\r\n                }, 0);\r\n                this.setState({laundryCash:laundryallCash});\r\n\r\n                var laundryallTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Transfer)\r\n                }, 0);\r\n                this.setState({laundryTransfer:laundryallTransfer});\r\n\r\n                var laundryallRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Room)\r\n                }, 0);\r\n                this.setState({laundryRoom:laundryallRoom});\r\n\r\n                this.myTimer = setTimeout(() => {\r\n                    var AllLaundry = 0;\r\n                    var AlLaundrySales = AllLaundry + parseInt(this.state.laundryCash) + parseInt(this.state.laundryPOS) + parseInt(this.state.laundryTransfer) + parseInt(this.state.laundryRoom)\r\n                    this.setState({laundryTotal:AlLaundrySales})\r\n                \r\n                },2000)\r\n                \r\n                return 'ok'\r\n            })\r\n        \r\n            if((data).length===0){\r\n                \r\n                this.setState({\r\n                    laundryRoom:0,\r\n                    laundryTransfer:0,\r\n                    laundryCash:0,\r\n                    laundryPOS:0,\r\n                    laundryTotal:0\r\n\r\n                })\r\n            }\r\n            \r\n        });\r\n\r\n        fetch(`${getAllGym}gymnasiumtoday=${thisDate}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n        this.setState({gymSales:data});\r\n        \r\n            data.map((item) => {\r\n\r\n                var gymllPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POS)\r\n                }, 0);\r\n                this.setState({gymPOS:gymllPOS});\r\n\r\n                var gymallCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Cash)\r\n                }, 0);\r\n                this.setState({gymCash:gymallCash});\r\n\r\n                var gymallTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Transfer)\r\n                }, 0);\r\n                this.setState({gymTransfer:gymallTransfer});\r\n\r\n                var gymallRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Room)\r\n                }, 0);\r\n                this.setState({gymRoom:gymallRoom});\r\n\r\n                this.myTimer = setTimeout(() => {\r\n                    var AllGym = 0;\r\n                    var AlGymSales = AllGym + parseInt(this.state.gymCash) + parseInt(this.state.gymPOS) + parseInt(this.state.gymTransfer) + parseInt(this.state.gymRoom)\r\n                    this.setState({gymTotal:AlGymSales})\r\n                \r\n                },2000)\r\n                \r\n                return 'ok'\r\n            })\r\n        \r\n            if((data).length===0){\r\n                \r\n                this.setState({\r\n                    gymRoom:0,\r\n                    gymTransfer:0,\r\n                    gymCash:0,\r\n                    gymPOS:0,\r\n                    gymTotal:0\r\n\r\n                })\r\n            }\r\n            \r\n        });\r\n\r\n        fetch(`${getAllSmoothie}smoothietoday=${thisDate}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n        this.setState({smoothieSales:data});\r\n        \r\n            data.map((item) => {\r\n\r\n                var smoothiellPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POS)\r\n                }, 0);\r\n                this.setState({smoothiePOS:smoothiellPOS});\r\n\r\n                var smoothieallCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Cash)\r\n                }, 0);\r\n                this.setState({smoothieCash:smoothieallCash});\r\n\r\n                var smoothieallTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Transfer)\r\n                }, 0);\r\n                this.setState({smoothieTransfer:smoothieallTransfer});\r\n\r\n                var smoothieallRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Room)\r\n                }, 0);\r\n                this.setState({smoothieRoom:smoothieallRoom});\r\n\r\n                this.myTimer = setTimeout(() => {\r\n                    var AllSmoothie = 0;\r\n                    var AlSmoothieSales = AllSmoothie + parseInt(this.state.smoothieCash) + parseInt(this.state.smoothiePOS) + parseInt(this.state.smoothieTransfer) + parseInt(this.state.smoothieRoom)\r\n                    this.setState({smoothieTotal:AlSmoothieSales})\r\n                \r\n                },2000)\r\n                \r\n                return 'ok'\r\n            })\r\n        \r\n            if((data).length===0){\r\n                \r\n                this.setState({\r\n                    smoothieRoom:0,\r\n                    smoothieTransfer:0,\r\n                    smoothieCash:0,\r\n                    smoothiePOS:0,\r\n                    smoothieTotal:0\r\n\r\n                })\r\n            }\r\n            \r\n        });\r\n\r\n        fetch(`${getAllSwimming}swimmingtoday=${thisDate}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n        this.setState({swimmingSales:data});\r\n        \r\n            data.map((item) => {\r\n\r\n                var swimmingllPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POS)\r\n                }, 0);\r\n                this.setState({swimmingPOS:swimmingllPOS});\r\n\r\n                var swimmingallCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Cash)\r\n                }, 0);\r\n                this.setState({swimmingCash:swimmingallCash});\r\n\r\n                var swimmingallTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Transfer)\r\n                }, 0);\r\n                this.setState({swimmingTransfer:swimmingallTransfer});\r\n\r\n                var swimmingallRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Room)\r\n                }, 0);\r\n                this.setState({swimmingRoom:swimmingallRoom});\r\n\r\n                this.myTimer = setTimeout(() => {\r\n                    var AllSwimming = 0;\r\n                    var AlSwimmingSales = AllSwimming + parseInt(this.state.swimmingCash) + parseInt(this.state.swimmingPOS) + parseInt(this.state.swimmingTransfer) + parseInt(this.state.swimmingRoom)\r\n                    this.setState({swimmingTotal:AlSwimmingSales})\r\n                \r\n                },2000)\r\n                \r\n                return 'ok'\r\n            })\r\n        \r\n            if((data).length===0){\r\n                \r\n                this.setState({\r\n                    swimmingRoom:0,\r\n                    swimmingTransfer:0,\r\n                    swimmingCash:0,\r\n                    swimmingPOS:0,\r\n                    swimmingTotal:0\r\n\r\n                })\r\n            }\r\n            \r\n        });\r\n\r\n        fetch(`${getAllMinimart}marttoday=${thisDate}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n        this.setState({minimartSales:data});\r\n        \r\n            data.map((item) => {\r\n\r\n                var martllPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POS)\r\n                }, 0);\r\n                this.setState({minimartPOS:martllPOS});\r\n\r\n                var martallCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Cash)\r\n                }, 0);\r\n                this.setState({minimartCash:martallCash});\r\n\r\n                var martallTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Transfer)\r\n                }, 0);\r\n                this.setState({minimartTransfer:martallTransfer});\r\n\r\n                var martallRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Room)\r\n                }, 0);\r\n                this.setState({minimartRoom:martallRoom});\r\n\r\n                this.myTimer = setTimeout(() => {\r\n                    var AllMart = 0;\r\n                    var AlMartSales = AllMart + parseInt(this.state.minimartCash) + parseInt(this.state.minimartPOS) + parseInt(this.state.minimartTransfer) + parseInt(this.state.minimartRoom)\r\n                    this.setState({minimartTotal:AlMartSales})\r\n                \r\n                },2000)\r\n                \r\n                return 'ok'\r\n            })\r\n        \r\n            if((data).length===0){\r\n                \r\n                this.setState({\r\n                    minimartRoom:0,\r\n                    minimartTransfer:0,\r\n                    minimartCash:0,\r\n                    minimartPOS:0,\r\n                    minimartTotal:0\r\n\r\n                })\r\n            }\r\n            \r\n        });\r\n\r\n        fetch(`${getAllBbq}bbqtoday=${thisDate}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n        this.setState({BarbequeSales:data});\r\n        \r\n            data.map((item) => {\r\n\r\n                var bbqllPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POS)\r\n                }, 0);\r\n                this.setState({BarbequePOS:bbqllPOS});\r\n\r\n                var bbqallCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Cash)\r\n                }, 0);\r\n                this.setState({BarbequeCash:bbqallCash});\r\n\r\n                var bbqallTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Transfer)\r\n                }, 0);\r\n                this.setState({BarbequeTransfer:bbqallTransfer});\r\n\r\n                var bbqallRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Room)\r\n                }, 0);\r\n                this.setState({BarbequeRoom:bbqallRoom});\r\n\r\n                this.myTimer = setTimeout(() => {\r\n                    var AllBbq = 0;\r\n                    var AlBbqSales = AllBbq + parseInt(this.state.BarbequeCash) + parseInt(this.state.BarbequePOS) + parseInt(this.state.BarbequeTransfer) + parseInt(this.state.BarbequeRoom)\r\n                    this.setState({BarbequeTotal:AlBbqSales})\r\n                \r\n                },2000)\r\n                \r\n                return 'ok'\r\n            })\r\n        \r\n            if((data).length===0){\r\n                \r\n                this.setState({\r\n                    BarbequeRoom:0,\r\n                    BarbequeTransfer:0,\r\n                    BarbequeCash:0,\r\n                    BarbequePOS:0,\r\n                    BarbequeTotal:0\r\n\r\n                })\r\n            }\r\n            \r\n        });\r\n\r\n        fetch(`${getAllshisha}shishatoday=${thisDate}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n        this.setState({shishaSales:data});\r\n        \r\n            data.map((item) => {\r\n\r\n                var shillPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POS)\r\n                }, 0);\r\n                this.setState({shishaPOS:shillPOS});\r\n\r\n                var shiallCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Cash)\r\n                }, 0);\r\n                this.setState({shishaCash:shiallCash});\r\n\r\n                var shiallTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Transfer)\r\n                }, 0);\r\n                this.setState({shishaTransfer:shiallTransfer});\r\n\r\n                var shiallRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Room)\r\n                }, 0);\r\n                this.setState({shishaRoom:shiallRoom});\r\n\r\n                this.myTimer = setTimeout(() => {\r\n                    var AllShi = 0;\r\n                    var AlshiSales = AllShi + parseInt(this.state.shishaCash) + parseInt(this.state.shishaPOS) + parseInt(this.state.shishaTransfer) + parseInt(this.state.shishaRoom)\r\n                    this.setState({shishaTotal:AlshiSales})\r\n                \r\n                },2000)\r\n                \r\n                return 'ok'\r\n            })\r\n        \r\n            if((data).length===0){\r\n                \r\n                this.setState({\r\n                    shishaRoom:0,\r\n                    shishaTransfer:0,\r\n                    shishaCash:0,\r\n                    shishaPOS:0,\r\n                    shishaTotal:0\r\n\r\n                })\r\n            }\r\n            \r\n        });\r\n\r\n        fetch(`${getAllHHire}hhiretoday=${thisDate}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n        this.setState({HallHireSales:data});\r\n        \r\n            data.map((item) => {\r\n\r\n                var hhllPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POS)\r\n                }, 0);\r\n                this.setState({HallHirePOS:hhllPOS});\r\n\r\n                var hhallCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Cash)\r\n                }, 0);\r\n                this.setState({HallHireCash:hhallCash});\r\n\r\n                var hhallTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Transfer)\r\n                }, 0);\r\n                this.setState({HallHireTransfer:hhallTransfer});\r\n\r\n                var hhallRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Room)\r\n                }, 0);\r\n                this.setState({hhallRoom:hhallRoom});\r\n\r\n                this.myTimer = setTimeout(() => {\r\n                    var Allhh = 0;\r\n                    var AlhhSales = Allhh + parseInt(this.state.HallHireCash) + parseInt(this.state.HallHirePOS) + parseInt(this.state.HallHireTransfer) + parseInt(this.state.HallHireRoom)\r\n                    this.setState({HallHireTotal:AlhhSales})\r\n                \r\n                },2000)\r\n                \r\n                return 'ok'\r\n            })\r\n        \r\n            if((data).length===0){\r\n               \r\n                this.setState({\r\n                    HallHireRoom:0,\r\n                    HallHireTransfer:0,\r\n                    HallHireCash:0,\r\n                    HallHirePOS:0,\r\n                    HallHireTotal:0\r\n                    \r\n                })\r\n            }\r\n            \r\n        });\r\n    }\r\n    \r\n\r\n    // logout(){\r\n    //     localStorage.removeItem('userInfo');\r\n    //     this.setState({\r\n    //         login:true\r\n    //     })\r\n    //     localStorage.removeItem('shift')\r\n        \r\n    // }\r\n    cleanupfirst(){\r\n        this.setState({ RoomDeposits:'',\r\n                        RoomTotal:0,\r\n                        depPOS:0,\r\n                        depCash:0,\r\n                        depTransfer:0,\r\n                        depRoom:0,\r\n\r\n                        BarSales:0,\r\n                        BarTotal:0,\r\n                        barPOS:0,\r\n                        barCash:0,\r\n                        barTransfer:0,\r\n                        barRoom:0,\r\n\r\n                        RestSales:'',\r\n                        RestTotal:0,\r\n                        restPOS:0,\r\n                        restCash:0,\r\n                        restTransfer:0,\r\n                        restRoom:0,\r\n\r\n                        functionSales:0,\r\n                        functionTotal:0,\r\n                        functionRoom:0,\r\n                        functionTransfer:0,\r\n                        functionCash:0,\r\n                        functionPOS:0,\r\n\r\n                        otherSales:0,\r\n                        othersTotal:0,\r\n                        otherPOS:0,\r\n                        otherCash:0,\r\n                        otherTransfer:0,\r\n                        otherRoom:0,\r\n\r\n                        poolSales:0,\r\n                        PoolTotal:0,\r\n                        poolPOS:0,\r\n                        poolCash:0,\r\n                        poolTransfer:0,\r\n                        poolRoom:0,\r\n\r\n                        clubSales:0,\r\n                        clubTotal:0,\r\n                        clubPOS:0,\r\n                        clubCash:0,\r\n                        clubTransfer:0,\r\n                        clubRoom:0,\r\n\r\n                        laundrySales:0,\r\n                        laundryTotal:0,\r\n                        laundryPOS:0,\r\n                        laundryCash:0,\r\n                        laundryTransfer:0,\r\n                        laundryRoom:0,\r\n\r\n                        gymSales:0,\r\n                        gymTotal:0,\r\n                        gymPOS:0,\r\n                        gymCash:0,\r\n                        gymTransfer:0,\r\n                        gymRoom:0,\r\n\r\n                        smoothieSales:0,\r\n                        smoothieTotal:0,\r\n                        smoothiePOS:0,\r\n                        smoothieCash:0,\r\n                        smoothieTransfer:0,\r\n                        smoothieRoom:0,\r\n\r\n                        swimmingSales:0,\r\n                        swimmingTotal:0,\r\n                        swimmingPOS:0,\r\n                        swimmingCash:0,\r\n                        swimmingTransfer:0,\r\n                        swimmingRoom:0,\r\n\r\n                        minimartSales:0,\r\n                        minimartTotal:0,\r\n                        minimartPOS:0,\r\n                        minimartCash:0,\r\n                        minimartTransfer:0,\r\n                        minimartRoom:0,\r\n\r\n                        BarbequeSales:0,\r\n                        BarbequeTotal:0,\r\n                        BarbequePOS:0,\r\n                        BarbequeCash:0,\r\n                        BarbequeTransfer:0,\r\n                        BarbequeRoom:0,\r\n\r\n                        shishaSales:0,\r\n                        shishaTotal:0,\r\n                        shishaPOS:0,\r\n                        shishaCash:0,\r\n                        shishaTransfer:0,\r\n                        shishaRoom:0,\r\n\r\n                        HallHireSales:0,\r\n                        HallHireTotal:0,\r\n                        HallHirePOS:0,\r\n                        HallHireCash:0,\r\n                        HallHireTransfer:0,\r\n                        HallHireRoom:0,\r\n\r\n                        POSCal:0,\r\n                        CashCal:0,\r\n                        TransferCal:0,\r\n                        RoomCal:0\r\n                        \r\n                    })\r\n    }\r\n\r\n    \r\n    renderRoomSales=(data)=>{\r\n        if(data){\r\n            \r\n            return data.map((item)=>{\r\n                \r\n                var defaultdate = moment(item.date).format('MMM DD YYYY');\r\n                \r\n                return(\r\n                    <>\r\n                        <tr key= {item._id}>\r\n                            \r\n                            <td className=\"table-light table-striped adjust2\">{defaultdate}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet\">{item.description}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.POS}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Cash}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Room}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Transfer}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(item.POS) + parseInt(item.Cash) + parseInt(item.Room) + parseInt(item.Transfer)}thousandSeparator={true}displayType={\"text\"}/></b></td> \r\n                            \r\n                        </tr>\r\n                        \r\n                    </>\r\n                )\r\n               \r\n            })\r\n            \r\n        }\r\n        \r\n    }\r\n\r\n    renderRestSales=(data)=>{\r\n        if(data){\r\n           \r\n            return data.map((item)=>{\r\n                \r\n                var defaultdate = moment(item.date).format('MMM DD YYYY');\r\n                return(\r\n                    <>\r\n                        <tr key= {item._id}>\r\n                            \r\n                            <td className=\"table-light table-striped adjust2\">{defaultdate}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet\">{item.description}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.POS}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Cash}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Room}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Transfer}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(item.POS) + parseInt(item.Cash) + parseInt(item.Room) + parseInt(item.Transfer)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            \r\n                        </tr>\r\n                        \r\n                    </>\r\n                )\r\n               \r\n            })\r\n            \r\n        }\r\n        \r\n           \r\n    }\r\n\r\n    renderBarSales=(data)=>{\r\n        if(data){\r\n           \r\n            return data.map((item)=>{\r\n               \r\n                var defaultdate = moment(item.date).format('MMM DD YYYY');\r\n                return(\r\n                    <>\r\n                        <tr key= {item._id}>\r\n                            \r\n                            <td className=\"table-light table-striped adjust2\">{defaultdate}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet\">{item.description}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.POS}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Cash}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Room}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Transfer}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(item.POS) + parseInt(item.Cash) + parseInt(item.Room) + parseInt(item.Transfer)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            \r\n                            \r\n                        </tr> \r\n                    </>\r\n                )\r\n               \r\n            })\r\n            \r\n        }\r\n          \r\n    }\r\n\r\n   \r\n    renderOtherSales=(data)=>{\r\n       \r\n        if(data){\r\n           \r\n            return data.map((item)=>{\r\n               \r\n                var defaultdate = moment(item.date).format('MMM DD YYYY');\r\n                return(\r\n                    <>\r\n                        <tr key= {item._id}>\r\n                            \r\n                            <td className=\"table-light table-striped adjust2\">{defaultdate}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet\">{item.description}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.POS}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Cash}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Room}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Transfer}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(item.POS) + parseInt(item.Cash) + parseInt(item.Room) + parseInt(item.Transfer)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            \r\n                        </tr> \r\n                    </>\r\n                )\r\n               \r\n            })\r\n            \r\n        }\r\n        \r\n           \r\n    }\r\n\r\n    renderPoolSales=(data)=>{\r\n       \r\n        if(data){\r\n           \r\n            return data.map((item)=>{\r\n               \r\n                var defaultdate = moment(item.date).format('MMM DD YYYY');\r\n                return(\r\n                    <>\r\n                        <tr key= {item._id}>\r\n                            \r\n                            <td className=\"table-light table-striped adjust2\">{defaultdate}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet\">{item.description}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.POS}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Cash}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Room}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Transfer}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(item.POS) + parseInt(item.Cash) + parseInt(item.Room) + parseInt(item.Transfer)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            \r\n                        </tr> \r\n                    </>\r\n                )\r\n               \r\n            })\r\n            \r\n        }\r\n        \r\n           \r\n    }\r\n\r\n    renderClubSales=(data)=>{\r\n       \r\n        if(data){\r\n           \r\n            return data.map((item)=>{\r\n               \r\n                var defaultdate = moment(item.date).format('MMM DD YYYY');\r\n                return(\r\n                    <>\r\n                        <tr key= {item._id}>\r\n                            \r\n                            <td className=\"table-light table-striped adjust2\">{defaultdate}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet\">{item.description}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.POS}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Cash}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Room}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Transfer}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(item.POS) + parseInt(item.Cash) + parseInt(item.Room) + parseInt(item.Transfer)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            \r\n                        </tr> \r\n                    </>\r\n                )\r\n               \r\n            })\r\n            \r\n        }\r\n        \r\n           \r\n    }\r\n\r\n    renderLaundrySales=(data)=>{\r\n       \r\n        if(data){\r\n           \r\n            return data.map((item)=>{\r\n               \r\n                var defaultdate = moment(item.date).format('MMM DD YYYY');\r\n                return(\r\n                    <>\r\n                        <tr key= {item._id}>\r\n                            \r\n                            <td className=\"table-light table-striped adjust2\">{defaultdate}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet\">{item.description}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.POS}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Cash}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Room}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Transfer}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(item.POS) + parseInt(item.Cash) + parseInt(item.Room) + parseInt(item.Transfer)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            \r\n                        </tr> \r\n                    </>\r\n                )\r\n               \r\n            })\r\n            \r\n        }\r\n        \r\n           \r\n    }\r\n\r\n    renderGymSales=(data)=>{\r\n       \r\n        if(data){\r\n           \r\n            return data.map((item)=>{\r\n               \r\n                var defaultdate = moment(item.date).format('MMM DD YYYY');\r\n                return(\r\n                    <>\r\n                        <tr key= {item._id}>\r\n                            \r\n                            <td className=\"table-light table-striped adjust2\">{defaultdate}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet\">{item.description}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.POS}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Cash}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Room}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Transfer}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(item.POS) + parseInt(item.Cash) + parseInt(item.Room) + parseInt(item.Transfer)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            \r\n                        </tr> \r\n                    </>\r\n                )\r\n               \r\n            })\r\n            \r\n        }\r\n        \r\n           \r\n    }\r\n\r\n    renderSmoothieSales=(data)=>{\r\n       \r\n        if(data){\r\n           \r\n            return data.map((item)=>{\r\n               \r\n                var defaultdate = moment(item.date).format('MMM DD YYYY');\r\n                return(\r\n                    <>\r\n                        <tr key= {item._id}>\r\n                            \r\n                            <td className=\"table-light table-striped adjust2\">{defaultdate}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet\">{item.description}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.POS}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Cash}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Room}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Transfer}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(item.POS) + parseInt(item.Cash) + parseInt(item.Room) + parseInt(item.Transfer)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            \r\n                        </tr> \r\n                    </>\r\n                )\r\n               \r\n            })\r\n            \r\n        }\r\n        \r\n           \r\n    }\r\n\r\n    renderSwimmingSales=(data)=>{\r\n       \r\n        if(data){\r\n           \r\n            return data.map((item)=>{\r\n               \r\n                var defaultdate = moment(item.date).format('MMM DD YYYY');\r\n                return(\r\n                    <>\r\n                        <tr key= {item._id}>\r\n                            \r\n                            <td className=\"table-light table-striped adjust2\">{defaultdate}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet\">{item.description}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.POS}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Cash}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Room}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Transfer}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(item.POS) + parseInt(item.Cash) + parseInt(item.Room) + parseInt(item.Transfer)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            \r\n                        </tr> \r\n                    </>\r\n                )\r\n               \r\n            })\r\n            \r\n        }\r\n        \r\n           \r\n    }\r\n\r\n    renderMartSales=(data)=>{\r\n       \r\n        if(data){\r\n           \r\n            return data.map((item)=>{\r\n               \r\n                var defaultdate = moment(item.date).format('MMM DD YYYY');\r\n                return(\r\n                    <>\r\n                        <tr key= {item._id}>\r\n                            \r\n                            <td className=\"table-light table-striped adjust2\">{defaultdate}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet\">{item.description}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.POS}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Cash}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Room}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Transfer}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(item.POS) + parseInt(item.Cash) + parseInt(item.Room) + parseInt(item.Transfer)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            \r\n                        </tr> \r\n                    </>\r\n                )\r\n               \r\n            })\r\n            \r\n        }\r\n        \r\n           \r\n    }\r\n\r\n    renderBbqSales=(data)=>{\r\n       \r\n        if(data){\r\n           \r\n            return data.map((item)=>{\r\n               \r\n                var defaultdate = moment(item.date).format('MMM DD YYYY');\r\n                return(\r\n                    <>\r\n                        <tr key= {item._id}>\r\n                            \r\n                            <td className=\"table-light table-striped adjust2\">{defaultdate}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet\">{item.description}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.POS}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Cash}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Room}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Transfer}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(item.POS) + parseInt(item.Cash) + parseInt(item.Room) + parseInt(item.Transfer)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            \r\n                        </tr> \r\n                    </>\r\n                )\r\n               \r\n            })\r\n            \r\n        }\r\n        \r\n           \r\n    }\r\n\r\n    rendershiSales=(data)=>{\r\n       \r\n        if(data){\r\n           \r\n            return data.map((item)=>{\r\n               \r\n                var defaultdate = moment(item.date).format('MMM DD YYYY');\r\n                return(\r\n                    <>\r\n                        <tr key= {item._id}>\r\n                            \r\n                            <td className=\"table-light table-striped adjust2\">{defaultdate}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet\">{item.description}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.POS}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Cash}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Room}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Transfer}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(item.POS) + parseInt(item.Cash) + parseInt(item.Room) + parseInt(item.Transfer)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            \r\n                        </tr> \r\n                    </>\r\n                )\r\n               \r\n            })\r\n            \r\n        }\r\n        \r\n           \r\n    }\r\n\r\n    renderhhSales=(data)=>{\r\n       \r\n        if(data){\r\n           \r\n            return data.map((item)=>{\r\n               \r\n                var defaultdate = moment(item.date).format('MMM DD YYYY');\r\n                return(\r\n                    <>\r\n                        <tr key= {item._id}>\r\n                            \r\n                            <td className=\"table-light table-striped adjust2\">{defaultdate}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet\">{item.description}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.POS}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Cash}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Room}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Transfer}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(item.POS) + parseInt(item.Cash) + parseInt(item.Room) + parseInt(item.Transfer)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            \r\n                        </tr> \r\n                    </>\r\n                )\r\n               \r\n            })\r\n            \r\n        }\r\n        \r\n           \r\n    }\r\n\r\n    render() {\r\n        console.log (\">>> Inside Cashdetails\", this.state)\r\n        \r\n        if(localStorage.getItem('rtk')==null||localStorage.getItem('userdata')===null||localStorage.getItem('emailAD')==='admin@orangegroove.com'){\r\n            return(\r\n                <>\r\n                    <Adlogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <Newheader/>\r\n                <div className =\"mobilevi\">\r\n                    <div className='container'>\r\n                        <div>\r\n                            <center>\r\n                                <h6>{this.state.Hotelname}</h6>\r\n                                <p className=\"textSize\">{this.state.Hoteladdress}</p>\r\n                                <p className=\"textSize\">{this.state.Hotelphone}</p>\r\n\r\n                            </center>\r\n                        </div>\r\n                        <center>\r\n                            <h5>Daily Sales Report</h5><br/>\r\n                            <div>\r\n                                <span>\r\n                                    <label>\r\n                                        {this.renderDate(this.state.startdate)}\r\n                                    </label>\r\n                                </span>\r\n                            \r\n                                <span>\r\n                                    \r\n                                    <button className=\"btn btn-primary space btnadjuster printing\" onClick={ () => {this.cleanupfirst();this.findSalesReport()}}>Find</button>\r\n                                    \r\n                                </span>\r\n                            </div>\r\n                                        \r\n                        </center>\r\n                        \r\n                        <table className=\"table table-hover\">\r\n                            \r\n                            <thead className=\"table-warning\">\r\n                                <tr>\r\n                                    \r\n                                <th className=\"adjust50\">Date</th>\r\n                                <th className=\"adjust50\">Description</th>\r\n                                <th className=\"adjust50\">POS (NGN)</th>\r\n                                <th className=\"adjust50\">Cash(NGN)</th>\r\n                                <th className=\"adjust50\">Room(NGN)</th>\r\n                                <th className=\"adjust50\">Transfer(NGN)</th>\r\n                                <th className=\"adjust50\">Total(NGN)</th>\r\n                                    \r\n                                            \r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className=\"table table-hover\">\r\n                                {this.renderRoomSales(this.state.RoomDeposits)}\r\n                                {this.renderRestSales(this.state.RestSales)}\r\n                                {this.renderBarSales(this.state.BarSales)}\r\n                                {this.renderOtherSales(this.state.otherSales)}\r\n                                {this.renderPoolSales(this.state.poolSales)}\r\n                                {this.renderClubSales(this.state.clubSales)}\r\n                                {this.renderLaundrySales(this.state.laundrySales)}\r\n                                {this.renderGymSales(this.state.gymSales)}\r\n                                {this.renderSmoothieSales(this.state.smoothieSales)}\r\n                                {this.renderSwimmingSales(this.state.swimmingSales)}\r\n                                {this.renderMartSales(this.state.minimartSales)}\r\n                                {this.renderBbqSales(this.state.BarbequeSales)}\r\n                                {this.rendershiSales(this.state.shishaSales)}\r\n                                {this.renderhhSales(this.state.HallHireSales)}\r\n                                <tr>\r\n                                    <td className=\"table-light table-striped adjust2\"> </td>\r\n                                    <td className=\"table-light table-striped adjust2\"><b>Total</b></td>\r\n                                    <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.depPOS) + parseInt(this.state.restPOS) + parseInt(this.state.barPOS) + parseInt(this.state.otherPOS) + parseInt(this.state.poolPOS) + parseInt(this.state.clubPOS) + parseInt(this.state.laundryPOS) + parseInt(this.state.gymPOS) + parseInt(this.state.smoothiePOS) + parseInt(this.state.minimartPOS) + parseInt(this.state.BarbequePOS) + parseInt(this.state.shishaPOS) + parseInt(this.state.HallHirePOS) + parseInt(this.state.swimmingPOS)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                                    <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.depCash) + parseInt(this.state.restCash) + parseInt(this.state.barCash) + parseInt(this.state.otherCash) + parseInt(this.state.poolCash) + parseInt(this.state.clubCash) + parseInt(this.state.laundryCash) + parseInt(this.state.gymCash) + parseInt(this.state.smoothieCash) + parseInt(this.state.minimartCash) + parseInt(this.state.BarbequeCash) + parseInt(this.state.shishaCash) + parseInt(this.state.HallHireCash) + parseInt(this.state.swimmingCash)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                                    <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.depRoom) + parseInt(this.state.restRoom) + parseInt(this.state.barRoom) + parseInt(this.state.otherRoom) + parseInt(this.state.poolRoom) + parseInt(this.state.clubRoom) + parseInt(this.state.laundryRoom) + parseInt(this.state.gymRoom) + parseInt(this.state.smoothieRoom) + parseInt(this.state.minimartRoom) + parseInt(this.state.BarbequeRoom) + parseInt(this.state.shishaRoom) + parseInt(this.state.HallHireRoom) + parseInt(this.state.swimmingRoom)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                                    <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.depTransfer) + parseInt(this.state.restTransfer) + parseInt(this.state.barTransfer) + parseInt(this.state.otherTransfer) + parseInt(this.state.poolTransfer) + parseInt(this.state.clubTransfer) + parseInt(this.state.laundryTransfer) + parseInt(this.state.gymTransfer) + parseInt(this.state.smoothieTransfer) + parseInt(this.state.minimartTransfer) + parseInt(this.state.BarbequeTransfer) + parseInt(this.state.shishaTransfer) + parseInt(this.state.HallHireTransfer) + parseInt(this.state.swimmingTransfer)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                                    <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.RoomTotal) + parseInt(this.state.BarTotal) + parseInt(this.state.RestTotal) + parseInt(this.state.othersTotal) + parseInt(this.state.PoolTotal) + parseInt(this.state.clubTotal) + parseInt(this.state.laundryTotal) + parseInt(this.state.gymTotal) + parseInt(this.state.smoothieTotal) + parseInt(this.state.minimartTotal) + parseInt(this.state.BarbequeTotal) + parseInt(this.state.shishaTotal) + parseInt(this.state.HallHireTotal)+ parseInt(this.state.swimmingTotal)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                                </tr>\r\n                                \r\n                            </tbody>\r\n                        </table>\r\n                        \r\n                        \r\n                        <h6>Total Collection:         <NumberFormat value={parseInt(this.state.RoomTotal) + parseInt(this.state.BarTotal) + parseInt(this.state.RestTotal) + parseInt(this.state.othersTotal) + parseInt(this.state.PoolTotal) + parseInt(this.state.clubTotal) + parseInt(this.state.laundryTotal) + parseInt(this.state.gymTotal) + parseInt(this.state.smoothieTotal) + parseInt(this.state.minimartTotal) + parseInt(this.state.BarbequeTotal) + parseInt(this.state.shishaTotal) + parseInt(this.state.HallHireTotal) + parseInt(this.state.swimmingTotal)}thousandSeparator={true}displayType={\"text\"}prefix={\"NGN\"}/></h6>\r\n                        <hr/>\r\n                        <center>\r\n                        \r\n                            <button className=\"btn btn-danger movebtn printing\" onClick={ () => this.props.history.push('/') }>Close</button>\r\n                            <button className=\"btn btn-primary movebtn printing\" onClick={ () => window.print() }>Print</button>\r\n                                \r\n                        </center>  \r\n\r\n                    </div>\r\n                         \r\n                </div>\r\n            </>\r\n            \r\n            \r\n        );\r\n    }\r\n  \r\n    componentDidMount() {\r\n        console.log(\">>> Inside CashDidMount\", this.state)\r\n        \r\n       \r\n    }\r\n\r\n}\r\n\r\n\r\nexport default CashCollection;","import React,{Component} from 'react';\r\nimport './Reception.css';\r\nimport axios from 'axios';\r\nimport Newheader from './Newheader';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport Adlogin from './Adlogin';\r\n\r\nconst roomchartUrl = \"/getrmstatus\";\r\nconst checkinguestUrl = \"/checkin?guest=\";\r\n\r\n\r\n\r\nclass RoomChart extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\">>>Inside RMConstructor\")\r\n\r\n        this.state={\r\n            roomchart:'',\r\n            guestrecord:'',\r\n           \r\n\r\n        }\r\n\r\n    }\r\n\r\n    // logout(){\r\n    //     localStorage.removeItem('userInfo');\r\n    //     this.setState({\r\n    //         login:true\r\n    //     })\r\n        \r\n    // }\r\n\r\n    renderRoomchart=((data)=>{\r\n        \r\n        if (data){\r\n            return data.map((item) =>{\r\n                data.sort((a, b) => a.roomNumbers - b.roomNumbers);\r\n                if(item.fname||item.lname||item.roomStatus===\"black\"||item.roomStatus!=='green'){\r\n                    return(\r\n                        <>\r\n                            \r\n                                \r\n                            <div className=\"card alignroomsgreen\" style={{backgroundColor:`${item.roomStatus}`}}>\r\n                                <div className=\"card-body top\">\r\n                                    <b className=\"card-title\">{item.roomNumbers}</b>\r\n                                    <h6 className=\"card-subtitle mb-2 sizel2\">{item.fname} {item.lname}</h6>\r\n                                    <h6 className=\"card-subtitle mb-2 sizel\">{item.roomtypeName}</h6>\r\n                                </div>\r\n                            </div>\r\n                                    \r\n                           \r\n                        </>\r\n                    )\r\n                    \r\n                }\r\n\r\n                \r\n                else{\r\n                    return(\r\n                        <>\r\n                            \r\n                               \r\n                            <div className=\"card alignroomsgreen\" style={{backgroundColor:`${item.roomStatus}`}}>\r\n                                <div className=\"card-body top\">\r\n                                    <b className=\"card-title\">{item.roomNumbers}</b>\r\n                                    <h6 className=\"card-subtitle mb-2 sizel2\">{item.fname} {item.lname}</h6>\r\n                                    <h6 className=\"card-subtitle sizel\">{item.roomtypeName}</h6>\r\n                                </div>\r\n                            </div>\r\n                                   \r\n                           \r\n                        </>\r\n                    )\r\n                }\r\n                \r\n                   \r\n            })\r\n        }\r\n        else{\r\n            return(\r\n                <>\r\n                    <Spinner animation=\"border\" variant=\"primary\" />\r\n                    <Spinner animation=\"border\" variant=\"danger\" />\r\n                    <Spinner animation=\"border\" variant=\"warning\" />\r\n                </>\r\n            )\r\n        }\r\n        \r\n    }) \r\n    \r\n\r\n    render(){\r\n        console.log(\">>> Inside RMrender\", this.state)\r\n        \r\n        if(localStorage.getItem('rtk')==null||localStorage.getItem('userdata')===null||localStorage.getItem('emailAD')==='admin@orangegroove.com'){\r\n            return(\r\n                <>\r\n                    <Adlogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n        \r\n        return(\r\n            <>\r\n                <Newheader/>\r\n                \r\n                <div className=\"pagebody12\">\r\n                    <br/>\r\n                    {this.renderRoomchart(this.state.roomchart)}\r\n                </div>\r\n\r\n                \r\n                \r\n                <center>\r\n                    <div className=\"pagebody2\">\r\n                        <div className=\"space\">\r\n                            \r\n                            <button className=\"btn btn-danger gap6\" onClick={ () => this.props.history.push('/')}>Close</button>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                \r\n                </center>\r\n                \r\n                \r\n                \r\n               \r\n                \r\n            </>\r\n        )\r\n        \r\n        \r\n    }\r\n\r\n    async componentDidMount(){\r\n        \r\n        console.log (\">>> Inside RMdidMount\")\r\n        const response = await axios.get(`${roomchartUrl}`)\r\n        const resp = await axios.get(`${checkinguestUrl}`)\r\n        this.setState({roomchart:response.data, guestrecord:resp.data})\r\n      \r\n        this.myTimer = setInterval(() => {\r\n            console.log (\">>> Inside RMdidMount\")\r\n            \r\n            fetch(`${roomchartUrl}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({roomchart:data});\r\n                \r\n            })\r\n\r\n            fetch(`${checkinguestUrl}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({guestrecord:data});\r\n                \r\n            })\r\n\r\n        },300000);\r\n\r\n    }\r\n\r\n\r\n}\r\nexport default RoomChart;","import React from 'react';\r\nimport {BrowserRouter, Route} from 'react-router-dom';\r\nimport NewDashboard from './Admin/NewDashboard';\r\nimport CheckInReport from './CheckInReport';\r\nimport Reservation from './Reservation';\r\nimport CashCollection from './CashCollection';\r\nimport RoomChart from './RoomChart';\r\nimport Adlogin from './Adlogin';\r\n\r\n\r\n\r\nconst Routing = () => {\r\n    return(\r\n        <BrowserRouter>\r\n            \r\n            <Route exact path=\"/\" component={NewDashboard}/>\r\n           <Route exact path=\"/AdLogin\" component={Adlogin}/>\r\n            <Route exact path=\"/Occupancy\" component={CheckInReport}/>\r\n            <Route exact path=\"/Reservation\" component={Reservation}/>\r\n            <Route exact path=\"/SalesReport\" component={CashCollection}/>\r\n            <Route exact path=\"/RoomChart\" component={RoomChart}/>\r\n            \r\n            \r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default Routing;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Routing from './Component/Routing';\r\nReactDOM.render(<Routing/>,document.getElementById('root'))"],"sourceRoot":""}